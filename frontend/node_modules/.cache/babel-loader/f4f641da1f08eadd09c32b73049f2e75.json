{"ast":null,"code":"var _jsxFileName = \"/home/dilip/Desktop/MERN/himalaya/src/components/statistics.component.js\";\n// import React, { Component } from 'react';\n// import CanvasJSReact from '../canvas/canvasjs.react';\n// var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n// class Graph extends Component {\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n// \t\tthis.state={\n// \t\t\tdataPoints:[\n// \t\t\t\t{ x: 1, y: 64 },\n// \t\t\t\t{ x: 2, y: 61 },\n// \t\t\t\t{ x: 3, y: 64 },\n// \t\t\t\t{ x: 4, y: 62 },\n// \t\t\t\t{ x: 5, y: 64 },\n// \t\t\t\t{ x: 6, y: 60 },\n// \t\t\t\t{ x: 7, y: 58 },\n// \t\t\t\t{ x: 8, y: 59 },\n// \t\t\t\t{ x: 9, y: 53 },\n// \t\t\t\t{ x: 10, y: 54 },\n// \t\t\t\t{ x: 11, y: 61 },\n// \t\t\t\t{ x: 12, y: 60 },\n// \t\t\t\t{ x: 13, y: 55 },\n// \t\t\t\t{ x: 14, y: 60 },\n// \t\t\t\t{ x: 15, y: 56 },\n// \t\t\t\t{ x: 16, y: 60 },\n// \t\t\t\t{ x: 17, y: 59.5 },\n// \t\t\t\t{ x: 18, y: 63 },\n// \t\t\t\t{ x: 19, y: 58 },\n// \t\t\t\t{ x: 20, y: 54 },\n// \t\t\t\t{ x: 21, y: 59 },\n// \t\t\t\t{ x: 22, y: 64 },\n// \t\t\t\t{ x: 23, y: 59 }\n// \t\t\t]\n// \t\t}\n// \t}\n// \trender() {\n// \t\tconst options = {\n// \t\t\tanimationEnabled: true,\n// \t\t\texportEnabled: true,\n// \t\t\ttheme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\n// \t\t\ttitle:{\n// \t\t\t\ttext: \"Sale Datewise for last month\"\n// \t\t\t},\n// \t\t\taxisY: {\n// \t\t\t\ttitle: \"Sales(in Rs)\",\n// \t\t\t\tincludeZero: false,\n// \t\t\t},\n// \t\t\taxisX: {\n// \t\t\t\ttitle: \"Dates\",\n// \t\t\t\tinterval: 2\n// \t\t\t},\n// \t\t\tdata: [{\n// \t\t\t\ttype: \"line\",\n// \t\t\t\ttoolTipContent: \"Date {x}: {y}%\",\n// \t\t\t\tdataPoints: this.state.dataPoints\n// \t\t\t}]\n// \t\t}\n// \t\treturn (\n// \t\t<div>\n// \t\t\t<h1>React Line Chart</h1>\n// \t\t\t<CanvasJSChart options = {options} \n// \t\t\t\t/* onRef={ref => this.chart = ref} */\n// \t\t\t/>\n// \t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n// \t\t</div>\n// \t\t);\n// \t}\n// }\n// export default Graph; \n// import React from 'react'\n// import { Chart } from 'react-charts'\n// export function Graph() {\n//   const data = React.useMemo(\n//     () => [\n//       {\n//         label: 'Series 1',\n//         data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n//       },\n//       {\n//         label: 'Series 2',\n//         data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n//       }\n//     ],\n//     []\n//   )\n//   const axes = React.useMemo(\n//     () => [\n//       { primary: true, type: 'bar', position: 'bottom' },\n//       { type: 'bar', position: 'left' }\n//     ],\n//     []\n//   )\n//   const barChart = (\n// A react-chart hyper-responsively and continuously fills the available\n// space of its parent element automatically\n//     <div\n//       style={{\n//         width: '400px',\n//         height: '300px'\n//       }}\n//     >\n//       <Chart data={data} axes={axes} />\n//     </div>\n//   )\n//   return barChart;\n// }\n// export default Graph;\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as V from 'victory'; // import React from 'react';\n// import ReactDOM from 'react-dom';\n\nimport { VictoryBar } from 'victory';\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(VictoryBar, {\n        data: this.data,\n        x: \"Dates\",\n        y: \"Sales\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 1\n        }\n      }));\n    };\n\n    const data = [{\n      quarter: 1,\n      earnings: 13000\n    }, {\n      quarter: 2,\n      earnings: 16500\n    }, {\n      quarter: 3,\n      earnings: 14250\n    }, {\n      quarter: 4,\n      earnings: 19000\n    }];\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/dilip/Desktop/MERN/himalaya/src/components/statistics.component.js"],"names":["React","Component","ReactDOM","V","VictoryBar","Graph","constructor","props","render","data","quarter","earnings"],"mappingscC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,SAAnB,C,CACA;AACA;;AACA,SAASC,UAAT,QAA2B,SAA3B;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CACA;AACCK,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;;AADD,SASDC,MATC,GASM,MAAI;AACV,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACF,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAE,KAAKC,IAAvB;AAA6B,QAAA,CAAC,EAAC,OAA/B;AAAuC,QAAA,CAAC,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,CADD;AAKA,KAfA;;AAEA,UAAMA,IAAI,GAAG,CACZ;AAACC,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KADY,EAEZ;AAACD,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KAFY,EAGZ;AAACD,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KAHY,EAIZ;AAACD,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KAJY,CAAb;AAMA;;AAVD;;AAmBA,eAAeN,KAAf","sourcesContent":["// import React, { Component } from 'react';\n// import CanvasJSReact from '../canvas/canvasjs.react';\n// var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n \n// class Graph extends Component {\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n// \t\tthis.state={\n// \t\t\tdataPoints:[\n// \t\t\t\t{ x: 1, y: 64 },\n// \t\t\t\t{ x: 2, y: 61 },\n// \t\t\t\t{ x: 3, y: 64 },\n// \t\t\t\t{ x: 4, y: 62 },\n// \t\t\t\t{ x: 5, y: 64 },\n// \t\t\t\t{ x: 6, y: 60 },\n// \t\t\t\t{ x: 7, y: 58 },\n// \t\t\t\t{ x: 8, y: 59 },\n// \t\t\t\t{ x: 9, y: 53 },\n// \t\t\t\t{ x: 10, y: 54 },\n// \t\t\t\t{ x: 11, y: 61 },\n// \t\t\t\t{ x: 12, y: 60 },\n// \t\t\t\t{ x: 13, y: 55 },\n// \t\t\t\t{ x: 14, y: 60 },\n// \t\t\t\t{ x: 15, y: 56 },\n// \t\t\t\t{ x: 16, y: 60 },\n// \t\t\t\t{ x: 17, y: 59.5 },\n// \t\t\t\t{ x: 18, y: 63 },\n// \t\t\t\t{ x: 19, y: 58 },\n// \t\t\t\t{ x: 20, y: 54 },\n// \t\t\t\t{ x: 21, y: 59 },\n// \t\t\t\t{ x: 22, y: 64 },\n// \t\t\t\t{ x: 23, y: 59 }\n// \t\t\t]\n// \t\t}\n// \t}\n// \trender() {\n// \t\tconst options = {\n// \t\t\tanimationEnabled: true,\n// \t\t\texportEnabled: true,\n// \t\t\ttheme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\n// \t\t\ttitle:{\n// \t\t\t\ttext: \"Sale Datewise for last month\"\n// \t\t\t},\n// \t\t\taxisY: {\n// \t\t\t\ttitle: \"Sales(in Rs)\",\n// \t\t\t\tincludeZero: false,\n// \t\t\t},\n// \t\t\taxisX: {\n// \t\t\t\ttitle: \"Dates\",\n// \t\t\t\tinterval: 2\n// \t\t\t},\n// \t\t\tdata: [{\n// \t\t\t\ttype: \"line\",\n// \t\t\t\ttoolTipContent: \"Date {x}: {y}%\",\n// \t\t\t\tdataPoints: this.state.dataPoints\n// \t\t\t}]\n// \t\t}\n\t\t\n// \t\treturn (\n// \t\t<div>\n// \t\t\t<h1>React Line Chart</h1>\n// \t\t\t<CanvasJSChart options = {options} \n// \t\t\t\t/* onRef={ref => this.chart = ref} */\n// \t\t\t/>\n// \t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n// \t\t</div>\n// \t\t);\n// \t}\n// }\n\n// export default Graph; \n\n\n// import React from 'react'\n// import { Chart } from 'react-charts'\n \n// export function Graph() {\n//   const data = React.useMemo(\n//     () => [\n//       {\n//         label: 'Series 1',\n//         data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n//       },\n//       {\n//         label: 'Series 2',\n//         data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n//       }\n//     ],\n//     []\n//   )\n \n//   const axes = React.useMemo(\n//     () => [\n//       { primary: true, type: 'bar', position: 'bottom' },\n//       { type: 'bar', position: 'left' }\n//     ],\n//     []\n//   )\n \n//   const barChart = (\n    // A react-chart hyper-responsively and continuously fills the available\n    // space of its parent element automatically\n//     <div\n//       style={{\n//         width: '400px',\n//         height: '300px'\n//       }}\n//     >\n//       <Chart data={data} axes={axes} />\n//     </div>\n//   )\n//   return barChart;\n// }\n// export default Graph;\n\nimport React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport * as V from 'victory';\n// import React from 'react';\n// import ReactDOM from 'react-dom';\nimport { VictoryBar } from 'victory';\n\nclass Graph extends Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props)\n\tconst data = [\n\t\t{quarter: 1, earnings: 13000},\n\t\t{quarter: 2, earnings: 16500},\n\t\t{quarter: 3, earnings: 14250},\n\t\t{quarter: 4, earnings: 19000}\n\t  ];\n}\nrender=()=>{\n\treturn(\n\t\t<div>\n<VictoryBar data={this.data} x=\"Dates\" y=\"Sales\" />\n\t\t</div>\n\t)\n}\n}\nexport default Graph;"]},"metadata":{},"sourceType":"module"}