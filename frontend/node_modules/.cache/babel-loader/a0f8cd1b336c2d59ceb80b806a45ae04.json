{"ast":null,"code":"var _jsxFileName = \"/home/dilip/Desktop/MERN/himalayafinal/src/components/statistics3.component.js\";\nimport React from 'react';\nimport c3 from 'c3';\n\nclass Chart extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.ref = el => this.chartContainer = el;\n\n    this.c3Instance = c3;\n    this.chart = null;\n  }\n\n  componentDidMount() {\n    this.setChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      columns,\n      type,\n      config\n    } = this.props.data;\n    console.log(columns);\n    this.chart.load({\n      columns,\n      type,\n      ...config\n    });\n  }\n\n  setChart() {\n    const {\n      data,\n      onClick,\n      onMouseOver,\n      onMouseOut,\n      type,\n      config\n    } = this.props;\n    data['onclick'] = onClick;\n    data['onmouseover'] = onMouseOver;\n    data['onmouseout'] = onMouseOut;\n    this.chart = this.c3Instance.generate({\n      bindto: this.chartContainer,\n      data: { ...data,\n        type: type || 'pie'\n      },\n      ...config\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nconst donut = {\n  data: {\n    columns: [['data', 30], ['data 1', 80]]\n  },\n  config: {\n    donut: {\n      title: 'Label'\n    }\n  }\n};\nconst gauge = {\n  data: {\n    columns: [['data', 30]]\n  },\n  config: {\n    color: {\n      pattern: ['#FF0000']\n    }\n  }\n};\nconst gaugeMultiData = {\n  data: {\n    columns: [['data', 10], ['data1', 50], ['data2', 80], ['data3', 100]]\n  },\n  config: {\n    color: {\n      pattern: ['#FF0000', '#8e61e4', '#3888c1', '#48c38a'],\n      threshold: {\n        values: [30, 60, 90, 100]\n      }\n    }\n  }\n};\nconst bar = {\n  data: {\n    columns: [['data', 10, 20, 30, 40, 60, 80]]\n  }\n};\nconst barCombine = {\n  data: {\n    columns: [['data1', 30, 20, 50, 40, 60, 50], ['data2', 200, 130, 90, 240, 130, 220], ['data3', 300, 200, 160, 400, 250, 250], ['data4', 200, 130, 90, 240, 130, 220], ['data5', 130, 120, 150, 140, 160, 150]],\n    types: {\n      data3: 'spline',\n      data4: 'line',\n      data6: 'area'\n    },\n    groups: [['data1', 'data2']]\n  }\n};\n\nconst Div = ({\n  width,\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    width: `${width}px`,\n    display: 'inline-block'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 40\n  }\n}, children);\n\nclass Graph extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      changePie: {\n        columns: [[\"setosa\", 50], [\"versicolor\", 200], [\"virginica\", 300]]\n      },\n      realtime: {\n        columns: []\n      }\n    };\n\n    this.clickChart = (dataSet, index) => console.log(\"onclick\", dataSet, index);\n\n    this.mouseOverchart = (dataSet, index) => console.log(\"onmouseover\", dataSet, index);\n\n    this.mouseOutchart = (dataSet, index) => console.log(\"onmouseout\", dataSet, index);\n\n    this.onChangeChart = () => {\n      this.setState({\n        changePie: {\n          columns: [[\"test\", 40], [\"setosa\", 100], [\"versicolor\", 50], [\"virginica\", 460]]\n        }\n      });\n    };\n\n    this.realtimeChart = () => {\n      setInterval(() => {\n        let data = [];\n\n        for (let i = 0; i <= 6; i++) {\n          data[i] = [`data ${i}`];\n\n          for (let n = 1; n <= 4; n++) {\n            const number = Math.floor(Math.random() * 150) + 1;\n            data[i][n] = number;\n          }\n        }\n\n        this.setState({\n          realtime: {\n            columns: data\n          }\n        });\n      }, 1500);\n    };\n\n    this.realtimeChart();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Div, {\n      width: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onChangeChart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"Change\"), /*#__PURE__*/React.createElement(Chart, {\n      data: this.state.changePie,\n      onClick: this.clickChart,\n      onMouseOver: this.mouseOverchart,\n      onMouseOut: this.mouseOutchart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Div, {\n      width: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"donut\",\n      data: donut.data,\n      config: donut.config,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Div, {\n      width: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"gauge\",\n      data: gauge.data,\n      config: gauge.config,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Div, {\n      width: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"gauge\",\n      data: gaugeMultiData.data,\n      config: gaugeMultiData.config,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Div, {\n      width: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"bar\",\n      data: bar.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Graph; //   ReactDOM.render(\n//     <MainApp />,\n//     document.getElementById(\"main-app\")\n//   );","map":{"version":3,"sources":["/home/dilip/Desktop/MERN/himalayafinal/src/components/statistics3.component.js"],"names":["React","c3","Chart","PureComponent","constructor","ref","el","chartContainer","c3Instance","chart","componentDidMount","setChart","componentDidUpdate","prevProps","columns","type","config","props","data","console","log","load","onClick","onMouseOver","onMouseOut","generate","bindto","render","donut","title","gauge","color","pattern","gaugeMultiData","threshold","values","bar","barCombine","types","data3","data4","data6","groups","Div","width","children","display","Graph","Component","state","changePie","realtime","clickChart","dataSet","index","mouseOverchart","mouseOutchart","onChangeChart","setState","realtimeChart","setInterval","i","n","number","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react'\nimport c3 from 'c3'\nclass Chart extends React.PureComponent {\n    constructor() {\n      super();\n      \n      this.c3Instance = c3;\n      this.chart = null;\n    }\n    \n    ref = (el) => this.chartContainer = el;\n  \n    componentDidMount() {\n      this.setChart();\n    }\n    componentDidUpdate(prevProps) {\n      const { columns, type, config } = this.props.data;\n      console.log(columns)\n      this.chart.load({ columns, type, ...config });\n    }\n  \n    setChart() {\n      const { data, onClick, onMouseOver, onMouseOut, type, config } = this.props;\n      \n      data['onclick'] = onClick;\n      data['onmouseover'] = onMouseOver;\n      data['onmouseout'] = onMouseOut;\n    \n      this.chart = this.c3Instance.generate({\n                      bindto: this.chartContainer,\n                      data: {...data, type: type || 'pie' },\n                      ...config\n                  });\n    }\n  \n    render() {\n      return(\n        <div ref={this.ref}></div>\n      );\n    }\n  }\n  \n  const donut = {\n    data: {columns: [['data', 30], ['data 1', 80]]},\n    config: {\n      donut: {\n        title: 'Label'\n      }\n    }\n  }\n  const gauge = {\n    data: {columns: [['data', 30]]},\n    config: {\n      color: {\n        pattern: ['#FF0000']\n      }\n    }\n  }\n  \n  const gaugeMultiData = {\n    data: {columns: [['data', 10], ['data1', 50], ['data2', 80], ['data3', 100]]},\n    config: {\n      color: {\n        pattern: ['#FF0000', '#8e61e4', '#3888c1', '#48c38a'],\n        threshold: {     \n          values: [30, 60, 90, 100]\n        }\n      }    \n    }\n  }\n  const bar = {\n    data: {\n      columns: [['data', 10, 20, 30, 40,60,80]]\n    }\n  }\n  const barCombine = {\n    data: {\n          columns: [\n              ['data1', 30, 20, 50, 40, 60, 50],\n              ['data2', 200, 130, 90, 240, 130, 220],\n              ['data3', 300, 200, 160, 400, 250, 250],\n              ['data4', 200, 130, 90, 240, 130, 220],\n              ['data5', 130, 120, 150, 140, 160, 150]\n          ],\n          types: {\n              data3: 'spline',\n              data4: 'line',\n              data6: 'area',\n          },\n          groups: [\n              ['data1','data2']\n          ]\n      }\n  }\n  \n  const Div = ({ width, children }) => <div style={{ width: `${width}px`, display: 'inline-block'}}>{children}</div>\n  \n  class Graph extends React.Component {\n    constructor() {\n      super();\n      \n      this.realtimeChart();\n    }\n    state = {\n      changePie: {\n        columns: [\n          [\"setosa\", 50],\n          [\"versicolor\", 200],\n          [\"virginica\", 300],\n        ]\n      },\n      realtime: { columns:[] }\n    }\n    \n    clickChart = (dataSet, index) => console.log(\"onclick\", dataSet, index);\n    mouseOverchart = (dataSet, index) => console.log(\"onmouseover\", dataSet, index);\n    mouseOutchart = (dataSet, index) => console.log(\"onmouseout\", dataSet, index);\n  \n    onChangeChart = () => {\n      this.setState({\n        changePie: {\n          columns: [\n              [\"test\", 40],\n              [\"setosa\", 100],\n              [\"versicolor\", 50],\n              [\"virginica\", 460],\n          ]\n        }\n      })\n    }\n    \n    realtimeChart = () => {    \n      setInterval(() => {\n        \n        let data = [];\n        \n        for (let i = 0; i <= 6; i++) {\n          data[i] = [`data ${i}`];\n          for(let n = 1; n <= 4; n++) {\n            const number = Math.floor(Math.random() * 150) + 1;\n            data[i][n] = number;\n          }\n        }\n        \n        this.setState({\n          realtime: {\n            columns: data\n          }\n        })\n        \n      }, 1500);\n    }\n  \n    render() {\n      return(\n        <div>\n          <Div width={300}>\n            <button onClick={this.onChangeChart}>Change</button>\n            <Chart data={this.state.changePie} \n                      onClick={this.clickChart} \n                      onMouseOver={this.mouseOverchart} \n                      onMouseOut={this.mouseOutchart} />\n          </Div>\n          <Div width={300}>\n            <Chart type=\"donut\" data={donut.data} config={donut.config} />\n          </Div>\n          <Div width={300}>\n            <Chart type=\"gauge\" data={gauge.data} config={gauge.config} />\n          </Div> \n          <Div width={300}>\n            <Chart type=\"gauge\" data={gaugeMultiData.data} config={gaugeMultiData.config} />\n          </Div> \n          <Div width={1000}>  \n            <Chart type=\"bar\" data={bar.data} />\n          </Div>\n     \n        </div>\n      );\n    }\n  }\n  export default Graph;\n//   ReactDOM.render(\n//     <MainApp />,\n//     document.getElementById(\"main-app\")\n//   );"]},"metadata":{},"sourceType":"module"}