{"ast":null,"code":"var _jsxFileName = \"/home/dilip/Desktop/MERN/himalaya/src/components/statistics2.component.js\";\nimport React, { Component } from 'react';\nimport BarChart from 'react-bar-chart';\nconst data = [{\n  text: new Date(new Date(Date.parse(\"2020-08-01\")).getFullYear(), new Date(Date.parse(\"2020-08-01\")).getMonth(), new Date(Date.parse(\"2020-08-01\")).getDate()),\n  value: 26\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-02\")).getFullYear(), new Date(Date.parse(\"2020-08-02\")).getMonth(), new Date(Date.parse(\"2020-08-02\")).getDate()),\n  value: 28\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-03\")).getFullYear(), new Date(Date.parse(\"2020-08-03\")).getMonth(), new Date(Date.parse(\"2020-08-03\")).getDate()),\n  value: 32\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-04\")).getFullYear(), new Date(Date.parse(\"2020-08-04\")).getMonth(), new Date(Date.parse(\"2020-08-04\")).getDate()),\n  value: 36\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-05\")).getFullYear(), new Date(Date.parse(\"2020-08-05\")).getMonth(), new Date(Date.parse(\"2020-08-05\")).getDate()),\n  value: 40\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-06\")).getFullYear(), new Date(Date.parse(\"2020-08-06\")).getMonth(), new Date(Date.parse(\"2020-08-06\")).getDate()),\n  value: 26\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-07\")).getFullYear(), new Date(Date.parse(\"2020-08-07\")).getMonth(), new Date(Date.parse(\"2020-08-07\")).getDate()),\n  value: 32\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-08\")).getFullYear(), new Date(Date.parse(\"2020-08-08\")).getMonth(), new Date(Date.parse(\"2020-08-08\")).getDate()),\n  value: 36\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-09\")).getFullYear(), new Date(Date.parse(\"2020-08-09\")).getMonth(), new Date(Date.parse(\"2020-08-09\")).getDate()),\n  value: 40\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-10\")).getFullYear(), new Date(Date.parse(\"2020-08-10\")).getMonth(), new Date(Date.parse(\"2020-08-10\")).getDate()),\n  value: 26\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-11\")).getFullYear(), new Date(Date.parse(\"2020-08-11\")).getMonth(), new Date(Date.parse(\"2020-08-11\")).getDate()),\n  value: 26\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-12\")).getFullYear(), new Date(Date.parse(\"2020-08-12\")).getMonth(), new Date(Date.parse(\"2020-08-12\")).getDate()),\n  value: 28\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-13\")).getFullYear(), new Date(Date.parse(\"2020-08-13\")).getMonth(), new Date(Date.parse(\"2020-08-13\")).getDate()),\n  value: 32\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-14\")).getFullYear(), new Date(Date.parse(\"2020-08-14\")).getMonth(), new Date(Date.parse(\"2020-08-14\")).getDate()),\n  value: 36\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-15\")).getFullYear(), new Date(Date.parse(\"2020-08-15\")).getMonth(), new Date(Date.parse(\"2020-08-15\")).getDate()),\n  value: 40\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-16\")).getFullYear(), new Date(Date.parse(\"2020-08-16\")).getMonth(), new Date(Date.parse(\"2020-08-16\")).getDate()),\n  value: 26\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-17\")).getFullYear(), new Date(Date.parse(\"2020-08-17\")).getMonth(), new Date(Date.parse(\"2020-08-17\")).getDate()),\n  value: 32\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-18\")).getFullYear(), new Date(Date.parse(\"2020-08-18\")).getMonth(), new Date(Date.parse(\"2020-08-18\")).getDate()),\n  value: 36\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-19\")).getFullYear(), new Date(Date.parse(\"2020-08-19\")).getMonth(), new Date(Date.parse(\"2020-08-19\")).getDate()),\n  value: 40\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-20\")).getFullYear(), new Date(Date.parse(\"2020-08-20\")).getMonth(), new Date(Date.parse(\"2020-08-20\")).getDate()),\n  value: 26\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-21\")).getFullYear(), new Date(Date.parse(\"2020-08-21\")).getMonth(), new Date(Date.parse(\"2020-08-21\")).getDate()),\n  value: 26\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-22\")).getFullYear(), new Date(Date.parse(\"2020-08-22\")).getMonth(), new Date(Date.parse(\"2020-08-22\")).getDate()),\n  value: 28\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-23\")).getFullYear(), new Date(Date.parse(\"2020-08-23\")).getMonth(), new Date(Date.parse(\"2020-08-23\")).getDate()),\n  value: 32\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-24\")).getFullYear(), new Date(Date.parse(\"2020-08-24\")).getMonth(), new Date(Date.parse(\"2020-08-24\")).getDate()),\n  value: 36\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-25\")).getFullYear(), new Date(Date.parse(\"2020-08-25\")).getMonth(), new Date(Date.parse(\"2020-08-25\")).getDate()),\n  value: 40\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-26\")).getFullYear(), new Date(Date.parse(\"2020-08-26\")).getMonth(), new Date(Date.parse(\"2020-08-26\")).getDate()),\n  value: 26\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-27\")).getFullYear(), new Date(Date.parse(\"2020-08-27\")).getMonth(), new Date(Date.parse(\"2020-08-27\")).getDate()),\n  value: 32\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-28\")).getFullYear(), new Date(Date.parse(\"2020-08-28\")).getMonth(), new Date(Date.parse(\"2020-08-28\")).getDate()),\n  value: 36\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-29\")).getFullYear(), new Date(Date.parse(\"2020-08-29\")).getMonth(), new Date(Date.parse(\"2020-08-29\")).getDate()),\n  value: 40\n}, {\n  text: new Date(new Date(Date.parse(\"2020-08-30\")).getFullYear(), new Date(Date.parse(\"2020-08-30\")).getMonth(), new Date(Date.parse(\"2020-08-30\")).getDate()),\n  value: 26\n}];\nconst margin = {\n  top: 20,\n  right: 20,\n  bottom: 30,\n  left: 40\n};\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      window.onresize = () => {\n        this.setState({\n          width: this.refs.root.offsetWidth\n        });\n      };\n    };\n\n    this.state = {\n      \"width\": 500\n    }; // return { width: 500 };\n  }\n\n  handleBarClick(element, id) {\n    console.log(`The bin ${element.text} with id ${id} was clicked`);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      ylabel: \"Quantity\",\n      width: this.state.width,\n      height: 500,\n      margin: margin,\n      data: data,\n      onBarClick: this.handleBarClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/dilip/Desktop/MERN/himalaya/src/components/statistics2.component.js"],"names":["React","Component","BarChart","data","text","Date","parse","getFullYear","getMonth","getDate","value","margin","top","right","bottom","left","Graph","constructor","props","componentDidMount","window","onresize","setState","width","refs","root","offsetWidth","state","handleBarClick","element","id","console","log","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport BarChart from 'react-bar-chart';\n \nconst data = [\n  { text: new Date(new Date(Date.parse(\"2020-08-01\")).getFullYear(), new Date(Date.parse(\"2020-08-01\")).getMonth(), new Date(Date.parse(\"2020-08-01\")).getDate()), value: 26},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-02\")).getFullYear(), new Date(Date.parse(\"2020-08-02\")).getMonth(), new Date(Date.parse(\"2020-08-02\")).getDate()), value: 28},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-03\")).getFullYear(), new Date(Date.parse(\"2020-08-03\")).getMonth(), new Date(Date.parse(\"2020-08-03\")).getDate()), value: 32},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-04\")).getFullYear(), new Date(Date.parse(\"2020-08-04\")).getMonth(), new Date(Date.parse(\"2020-08-04\")).getDate()), value: 36},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-05\")).getFullYear(), new Date(Date.parse(\"2020-08-05\")).getMonth(), new Date(Date.parse(\"2020-08-05\")).getDate()), value: 40},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-06\")).getFullYear(), new Date(Date.parse(\"2020-08-06\")).getMonth(), new Date(Date.parse(\"2020-08-06\")).getDate()), value: 26},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-07\")).getFullYear(), new Date(Date.parse(\"2020-08-07\")).getMonth(), new Date(Date.parse(\"2020-08-07\")).getDate()), value: 32},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-08\")).getFullYear(), new Date(Date.parse(\"2020-08-08\")).getMonth(), new Date(Date.parse(\"2020-08-08\")).getDate()), value: 36},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-09\")).getFullYear(), new Date(Date.parse(\"2020-08-09\")).getMonth(), new Date(Date.parse(\"2020-08-09\")).getDate()), value: 40},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-10\")).getFullYear(), new Date(Date.parse(\"2020-08-10\")).getMonth(), new Date(Date.parse(\"2020-08-10\")).getDate()), value: 26},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-11\")).getFullYear(), new Date(Date.parse(\"2020-08-11\")).getMonth(), new Date(Date.parse(\"2020-08-11\")).getDate()), value: 26},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-12\")).getFullYear(), new Date(Date.parse(\"2020-08-12\")).getMonth(), new Date(Date.parse(\"2020-08-12\")).getDate()), value: 28},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-13\")).getFullYear(), new Date(Date.parse(\"2020-08-13\")).getMonth(), new Date(Date.parse(\"2020-08-13\")).getDate()), value: 32},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-14\")).getFullYear(), new Date(Date.parse(\"2020-08-14\")).getMonth(), new Date(Date.parse(\"2020-08-14\")).getDate()), value: 36},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-15\")).getFullYear(), new Date(Date.parse(\"2020-08-15\")).getMonth(), new Date(Date.parse(\"2020-08-15\")).getDate()), value: 40},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-16\")).getFullYear(), new Date(Date.parse(\"2020-08-16\")).getMonth(), new Date(Date.parse(\"2020-08-16\")).getDate()), value: 26},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-17\")).getFullYear(), new Date(Date.parse(\"2020-08-17\")).getMonth(), new Date(Date.parse(\"2020-08-17\")).getDate()), value: 32},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-18\")).getFullYear(), new Date(Date.parse(\"2020-08-18\")).getMonth(), new Date(Date.parse(\"2020-08-18\")).getDate()), value: 36},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-19\")).getFullYear(), new Date(Date.parse(\"2020-08-19\")).getMonth(), new Date(Date.parse(\"2020-08-19\")).getDate()), value: 40},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-20\")).getFullYear(), new Date(Date.parse(\"2020-08-20\")).getMonth(), new Date(Date.parse(\"2020-08-20\")).getDate()), value: 26},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-21\")).getFullYear(), new Date(Date.parse(\"2020-08-21\")).getMonth(), new Date(Date.parse(\"2020-08-21\")).getDate()), value: 26},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-22\")).getFullYear(), new Date(Date.parse(\"2020-08-22\")).getMonth(), new Date(Date.parse(\"2020-08-22\")).getDate()), value: 28},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-23\")).getFullYear(), new Date(Date.parse(\"2020-08-23\")).getMonth(), new Date(Date.parse(\"2020-08-23\")).getDate()), value: 32},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-24\")).getFullYear(), new Date(Date.parse(\"2020-08-24\")).getMonth(), new Date(Date.parse(\"2020-08-24\")).getDate()), value: 36},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-25\")).getFullYear(), new Date(Date.parse(\"2020-08-25\")).getMonth(), new Date(Date.parse(\"2020-08-25\")).getDate()), value: 40},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-26\")).getFullYear(), new Date(Date.parse(\"2020-08-26\")).getMonth(), new Date(Date.parse(\"2020-08-26\")).getDate()), value: 26},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-27\")).getFullYear(), new Date(Date.parse(\"2020-08-27\")).getMonth(), new Date(Date.parse(\"2020-08-27\")).getDate()), value: 32},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-28\")).getFullYear(), new Date(Date.parse(\"2020-08-28\")).getMonth(), new Date(Date.parse(\"2020-08-28\")).getDate()), value: 36},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-29\")).getFullYear(), new Date(Date.parse(\"2020-08-29\")).getMonth(), new Date(Date.parse(\"2020-08-29\")).getDate()), value: 40},\n  \t\t\t\t{ text: new Date(new Date(Date.parse(\"2020-08-30\")).getFullYear(), new Date(Date.parse(\"2020-08-30\")).getMonth(), new Date(Date.parse(\"2020-08-30\")).getDate()), value: 26}]\n \nconst margin = {top: 20, right: 20, bottom: 30, left: 40};\n \nclass Graph extends Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state=\n    {\n      \"width\":500\n    }\n    // return { width: 500 };\n  }\n \n  componentDidMount=() => {\n    window.onresize = () => {\n     this.setState({width: this.refs.root.offsetWidth}); \n    };\n  }\n \n  handleBarClick(element, id){ \n    console.log(`The bin ${element.text} with id ${id} was clicked`);\n  }\n \n  render() {\n    return (\n        <div ref='root'>\n            <div style={{width: '100%'}}> \n                <BarChart ylabel='Quantity'\n                  width={this.state.width}\n                  height={500}\n                  margin={margin}\n                  data={data}\n                  onBarClick={this.handleBarClick}/>\n            </div>\n        </div>\n    );\n  }\n}\nexport default Graph;"]},"metadata":{},"sourceType":"module"}