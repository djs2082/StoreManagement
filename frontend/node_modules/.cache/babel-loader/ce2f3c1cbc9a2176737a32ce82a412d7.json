{"ast":null,"code":"var _jsxFileName = \"/home/dilip/Desktop/MERN/himalaya/src/components/statistics.component.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../canvas/canvasjs.react';\nimport * as V from 'victory';\nimport { VictoryLine, VictoryChart, VictoryTheme, Background } from 'victory';\nimport ReactDOM from 'react-dom';\nimport { VictoryBar } from 'victory';\nimport { Chart } from 'react-charts';\nimport { Link } from '@react-pdf/renderer';\nimport useDemoConfig from \"./useDemoConfig\";\nimport useLagRadar from \"./useLagRadar\";\nimport ResizableBox from \"./ResizableBox\"; // import \"./styles.css\";\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart; // class Graph extends Component {\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n// \t\tthis.state={\n// \t\t\tdataPoints:[\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-01\")).getFullYear(), new Date(Date.parse(\"2020-08-01\")).getMonth(), new Date(Date.parse(\"2020-08-01\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-02\")).getFullYear(), new Date(Date.parse(\"2020-08-02\")).getMonth(), new Date(Date.parse(\"2020-08-02\")).getDate()), y: 28},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-03\")).getFullYear(), new Date(Date.parse(\"2020-08-03\")).getMonth(), new Date(Date.parse(\"2020-08-03\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-04\")).getFullYear(), new Date(Date.parse(\"2020-08-04\")).getMonth(), new Date(Date.parse(\"2020-08-04\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-05\")).getFullYear(), new Date(Date.parse(\"2020-08-05\")).getMonth(), new Date(Date.parse(\"2020-08-05\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-06\")).getFullYear(), new Date(Date.parse(\"2020-08-06\")).getMonth(), new Date(Date.parse(\"2020-08-06\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-07\")).getFullYear(), new Date(Date.parse(\"2020-08-07\")).getMonth(), new Date(Date.parse(\"2020-08-07\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-08\")).getFullYear(), new Date(Date.parse(\"2020-08-08\")).getMonth(), new Date(Date.parse(\"2020-08-08\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-09\")).getFullYear(), new Date(Date.parse(\"2020-08-09\")).getMonth(), new Date(Date.parse(\"2020-08-09\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-10\")).getFullYear(), new Date(Date.parse(\"2020-08-10\")).getMonth(), new Date(Date.parse(\"2020-08-10\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-11\")).getFullYear(), new Date(Date.parse(\"2020-08-11\")).getMonth(), new Date(Date.parse(\"2020-08-11\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-12\")).getFullYear(), new Date(Date.parse(\"2020-08-12\")).getMonth(), new Date(Date.parse(\"2020-08-12\")).getDate()), y: 28},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-13\")).getFullYear(), new Date(Date.parse(\"2020-08-13\")).getMonth(), new Date(Date.parse(\"2020-08-13\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-14\")).getFullYear(), new Date(Date.parse(\"2020-08-14\")).getMonth(), new Date(Date.parse(\"2020-08-14\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-15\")).getFullYear(), new Date(Date.parse(\"2020-08-15\")).getMonth(), new Date(Date.parse(\"2020-08-15\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-16\")).getFullYear(), new Date(Date.parse(\"2020-08-16\")).getMonth(), new Date(Date.parse(\"2020-08-16\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-17\")).getFullYear(), new Date(Date.parse(\"2020-08-17\")).getMonth(), new Date(Date.parse(\"2020-08-17\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-18\")).getFullYear(), new Date(Date.parse(\"2020-08-18\")).getMonth(), new Date(Date.parse(\"2020-08-18\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-19\")).getFullYear(), new Date(Date.parse(\"2020-08-19\")).getMonth(), new Date(Date.parse(\"2020-08-19\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-20\")).getFullYear(), new Date(Date.parse(\"2020-08-20\")).getMonth(), new Date(Date.parse(\"2020-08-20\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-21\")).getFullYear(), new Date(Date.parse(\"2020-08-21\")).getMonth(), new Date(Date.parse(\"2020-08-21\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-22\")).getFullYear(), new Date(Date.parse(\"2020-08-22\")).getMonth(), new Date(Date.parse(\"2020-08-22\")).getDate()), y: 28},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-23\")).getFullYear(), new Date(Date.parse(\"2020-08-23\")).getMonth(), new Date(Date.parse(\"2020-08-23\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-24\")).getFullYear(), new Date(Date.parse(\"2020-08-24\")).getMonth(), new Date(Date.parse(\"2020-08-24\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-25\")).getFullYear(), new Date(Date.parse(\"2020-08-25\")).getMonth(), new Date(Date.parse(\"2020-08-25\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-26\")).getFullYear(), new Date(Date.parse(\"2020-08-26\")).getMonth(), new Date(Date.parse(\"2020-08-26\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-27\")).getFullYear(), new Date(Date.parse(\"2020-08-27\")).getMonth(), new Date(Date.parse(\"2020-08-27\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-28\")).getFullYear(), new Date(Date.parse(\"2020-08-28\")).getMonth(), new Date(Date.parse(\"2020-08-28\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-29\")).getFullYear(), new Date(Date.parse(\"2020-08-29\")).getMonth(), new Date(Date.parse(\"2020-08-29\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-30\")).getFullYear(), new Date(Date.parse(\"2020-08-30\")).getMonth(), new Date(Date.parse(\"2020-08-30\")).getDate()), y: 26}\n// \t\t\t]\n// \t\t}\n// \t}\n// \trender() {\n// \t\tconst options = {\n// \t\t\tanimationEnabled: true,\n// \t\t\texportEnabled: true,\n// \t\t\ttheme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\n// \t\t\tbackgroundColor:\"rgb(0,0,0)\",\n// \t\t\ttitle:{\n// \t\t\t\ttext: \"Sale Datewise for last month\",\n// \t\t\t\tfontColor:'rgb(255,255,255)'\n// \t\t\t},\n// \t\t\taxisY: {\n// \t\t\t\ttitle: \"Sales(in Rs)\",\n// \t\t\t\tfontColor:'rgb(255,255,255)',\n// \t\t\t\tincludeZero: false,\n// \t\t\t\tlabelFontColor:\"rgb(255,255,255)\"\n// \t\t\t},\n// \t\t\taxisX: {\n// \t\t\t\ttitle: \"Dates\",\n// \t\t\t\tgridThickness: 2,\n// \t\t\t\tfontColor:'rgb(255,255,255)',\n// \t\t\t\tlabelFontColor:\"rgb(255,255,255)\"\n// \t\t\t},\n// \t\t\theight:1000,\n// \t\t\tdata: [{\n// \t\t\t\ttype: \"line\",\n// \t\t\t\ttoolTipContent: \"Date {x}: {y}%\",\n// \t\t\t\tdataPoints: this.state.dataPoints\n// \t\t\t}]\n// \t\t}\n// \t\treturn (\n// \t\t<div>\n// \t\t\t<h1>React Line Chart</h1>\n// \t<CanvasJSChart options = {options} />\n//      </div>\n// \t\t);\n// \t}\n// }\n// export default Graph; \n// import React from 'react'\n\nfunction Graph() {\n  useLagRadar();\n  const {\n    data,\n    randomizeData\n  } = useDemoConfig({\n    series: 10,\n    dataType: \"ordinal\"\n  });\n  const series = React.useMemo(() => ({\n    type: \"bar\"\n  }), []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: \"ordinal\",\n    position: \"left\"\n  }, {\n    position: \"bottom\",\n    type: \"linear\",\n    stacked: true\n  }], []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: randomizeData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, \"Randomize Data\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ResizableBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    data: data,\n    series: series,\n    axes: axes,\n    tooltip: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }\n  }))); // const data = React.useMemo(\n  //   () => [\n  // \t{\n  // \t  label: 'Series 1',\n  // \t  data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n  // \t},\n  // \t{\n  // \t  label: 'Series 2',\n  // \t  data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n  // \t}\n  //   ],\n  //   []\n  // )\n  // const axes = React.useMemo(\n  //   () => [\n  // \t{ primary: true, type: 'linear', position: 'bottom' },\n  // \t{ type: 'linear', position: 'left' }\n  //   ],\n  //   []\n  // )\n  // const lineChart = (\n  //   <div\n  // \tstyle={{\n  // \t  width: '800px',\n  // \t  height: '800px'\n  // \t}}\n  //   >\n  // \t<Chart data={data} axes={axes} />\n  //   </div>\n  // )\n  // return lineChart\n}\n\nexport default Graph; // import React from 'react';\n// import ReactDOM from 'react-dom';\n// import { VictoryBar } from 'victory';\n// const data=[\n// \t{quarter: 1, earnings: 13000},\n// \t{quarter: 2, earnings: 16500},\n// \t{quarter: 3, earnings: 14250},\n// \t{quarter: 4, earnings: 19000}\n//   ]\n// class Graph extends Component\n// {\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n// }\n// render=()=>{\n// \treturn(\n// \t\t<div>\n// \t\t\t{/* {console.log(this.state.data)} */}\n// <VictoryBar data={data} />\n// \t\t</div>\n// \t)\n// }\n// }\n// export default Graph;\n// import React,{Component} from 'react';\n// import ReactDOM from 'react-dom';\n// const data = [\n// \t{quarter: 1, earnings: 13000},\n// \t{quarter: 2, earnings: 16500},\n// \t{quarter: 3, earnings: 14250},\n// \t{quarter: 4, earnings: 19000},\n// \t{quarter: 5, earnings: 13000},\n// \t{quarter: 6, earnings: 16500},\n// \t{quarter: 7, earnings: 14250},\n// \t{quarter: 8, earnings: 19000},\n// \t{quarter: 9, earnings: 13000},\n// \t{quarter: 10, earnings: 16500},\n// \t{quarter: 11, earnings: 14250},\n// \t{quarter: 12, earnings: 19000}\n//   ];\n//   class Graph extends React.Component {\n// \trender() {\n// \t  return (\n// \t\t<VictoryChart widht={800} domainPadding={20} style={{\n// \t\t\tbackground: { fill: \"white\" }\n// \t\t  }}\n// \t\t  backgroundComponent={<Background/>} animate={{\n// \t\t\tduration: 2000,\n// \t\t\tonLoad: { duration: 1000 }\n// \t\t  }}>\n// \t\t  <VictoryLine\n// \t\t\tdata={data}\n// \t\t\tx=\"quarter\"\n// \t\t\ty=\"earnings\"\n// \t\t  />\n// \t\t</VictoryChart>\n// \t  )\n// \t}\n//   }\n//   export default Graph\n//   ReactDOM.render(<App/>, mountNode);","map":{"version":3,"sources":["/home/dilip/Desktop/MERN/himalaya/src/components/statistics.component.js"],"names":["React","Component","CanvasJSReact","V","VictoryLine","VictoryChart","VictoryTheme","Background","ReactDOM","VictoryBar","Chart","Link","useDemoConfig","useLagRadar","ResizableBox","CanvasJSChart","Graph","data","randomizeData","series","dataType","useMemo","type","axes","primary","position","stacked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CanvasJSReact from '../canvas/canvasjs.react';\nimport * as V from 'victory';\nimport { VictoryLine, VictoryChart,VictoryTheme,Background } from 'victory'\nimport ReactDOM from 'react-dom';\nimport { VictoryBar } from 'victory';\nimport { Chart } from 'react-charts'\nimport { Link } from '@react-pdf/renderer';\n\nimport useDemoConfig from \"./useDemoConfig\";\nimport useLagRadar from \"./useLagRadar\";\nimport ResizableBox from \"./ResizableBox\";\n// import \"./styles.css\";\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n \n// class Graph extends Component {\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n// \t\tthis.state={\n// \t\t\tdataPoints:[\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-01\")).getFullYear(), new Date(Date.parse(\"2020-08-01\")).getMonth(), new Date(Date.parse(\"2020-08-01\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-02\")).getFullYear(), new Date(Date.parse(\"2020-08-02\")).getMonth(), new Date(Date.parse(\"2020-08-02\")).getDate()), y: 28},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-03\")).getFullYear(), new Date(Date.parse(\"2020-08-03\")).getMonth(), new Date(Date.parse(\"2020-08-03\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-04\")).getFullYear(), new Date(Date.parse(\"2020-08-04\")).getMonth(), new Date(Date.parse(\"2020-08-04\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-05\")).getFullYear(), new Date(Date.parse(\"2020-08-05\")).getMonth(), new Date(Date.parse(\"2020-08-05\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-06\")).getFullYear(), new Date(Date.parse(\"2020-08-06\")).getMonth(), new Date(Date.parse(\"2020-08-06\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-07\")).getFullYear(), new Date(Date.parse(\"2020-08-07\")).getMonth(), new Date(Date.parse(\"2020-08-07\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-08\")).getFullYear(), new Date(Date.parse(\"2020-08-08\")).getMonth(), new Date(Date.parse(\"2020-08-08\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-09\")).getFullYear(), new Date(Date.parse(\"2020-08-09\")).getMonth(), new Date(Date.parse(\"2020-08-09\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-10\")).getFullYear(), new Date(Date.parse(\"2020-08-10\")).getMonth(), new Date(Date.parse(\"2020-08-10\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-11\")).getFullYear(), new Date(Date.parse(\"2020-08-11\")).getMonth(), new Date(Date.parse(\"2020-08-11\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-12\")).getFullYear(), new Date(Date.parse(\"2020-08-12\")).getMonth(), new Date(Date.parse(\"2020-08-12\")).getDate()), y: 28},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-13\")).getFullYear(), new Date(Date.parse(\"2020-08-13\")).getMonth(), new Date(Date.parse(\"2020-08-13\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-14\")).getFullYear(), new Date(Date.parse(\"2020-08-14\")).getMonth(), new Date(Date.parse(\"2020-08-14\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-15\")).getFullYear(), new Date(Date.parse(\"2020-08-15\")).getMonth(), new Date(Date.parse(\"2020-08-15\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-16\")).getFullYear(), new Date(Date.parse(\"2020-08-16\")).getMonth(), new Date(Date.parse(\"2020-08-16\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-17\")).getFullYear(), new Date(Date.parse(\"2020-08-17\")).getMonth(), new Date(Date.parse(\"2020-08-17\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-18\")).getFullYear(), new Date(Date.parse(\"2020-08-18\")).getMonth(), new Date(Date.parse(\"2020-08-18\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-19\")).getFullYear(), new Date(Date.parse(\"2020-08-19\")).getMonth(), new Date(Date.parse(\"2020-08-19\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-20\")).getFullYear(), new Date(Date.parse(\"2020-08-20\")).getMonth(), new Date(Date.parse(\"2020-08-20\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-21\")).getFullYear(), new Date(Date.parse(\"2020-08-21\")).getMonth(), new Date(Date.parse(\"2020-08-21\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-22\")).getFullYear(), new Date(Date.parse(\"2020-08-22\")).getMonth(), new Date(Date.parse(\"2020-08-22\")).getDate()), y: 28},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-23\")).getFullYear(), new Date(Date.parse(\"2020-08-23\")).getMonth(), new Date(Date.parse(\"2020-08-23\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-24\")).getFullYear(), new Date(Date.parse(\"2020-08-24\")).getMonth(), new Date(Date.parse(\"2020-08-24\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-25\")).getFullYear(), new Date(Date.parse(\"2020-08-25\")).getMonth(), new Date(Date.parse(\"2020-08-25\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-26\")).getFullYear(), new Date(Date.parse(\"2020-08-26\")).getMonth(), new Date(Date.parse(\"2020-08-26\")).getDate()), y: 26},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-27\")).getFullYear(), new Date(Date.parse(\"2020-08-27\")).getMonth(), new Date(Date.parse(\"2020-08-27\")).getDate()), y: 32},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-28\")).getFullYear(), new Date(Date.parse(\"2020-08-28\")).getMonth(), new Date(Date.parse(\"2020-08-28\")).getDate()), y: 36},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-29\")).getFullYear(), new Date(Date.parse(\"2020-08-29\")).getMonth(), new Date(Date.parse(\"2020-08-29\")).getDate()), y: 40},\n// \t\t\t\t{ x: new Date(new Date(Date.parse(\"2020-08-30\")).getFullYear(), new Date(Date.parse(\"2020-08-30\")).getMonth(), new Date(Date.parse(\"2020-08-30\")).getDate()), y: 26}\n// \t\t\t]\n\t\t\n// \t\t}\n// \t}\n// \trender() {\n// \t\tconst options = {\n// \t\t\tanimationEnabled: true,\n// \t\t\texportEnabled: true,\n// \t\t\ttheme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\n// \t\t\tbackgroundColor:\"rgb(0,0,0)\",\n// \t\t\ttitle:{\n// \t\t\t\ttext: \"Sale Datewise for last month\",\n// \t\t\t\tfontColor:'rgb(255,255,255)'\n// \t\t\t},\n// \t\t\taxisY: {\n// \t\t\t\ttitle: \"Sales(in Rs)\",\n// \t\t\t\tfontColor:'rgb(255,255,255)',\n// \t\t\t\tincludeZero: false,\n// \t\t\t\tlabelFontColor:\"rgb(255,255,255)\"\n// \t\t\t},\n// \t\t\taxisX: {\n// \t\t\t\ttitle: \"Dates\",\n// \t\t\t\tgridThickness: 2,\n// \t\t\t\tfontColor:'rgb(255,255,255)',\n// \t\t\t\tlabelFontColor:\"rgb(255,255,255)\"\n// \t\t\t},\n// \t\t\theight:1000,\n// \t\t\tdata: [{\n// \t\t\t\ttype: \"line\",\n// \t\t\t\ttoolTipContent: \"Date {x}: {y}%\",\n// \t\t\t\tdataPoints: this.state.dataPoints\n// \t\t\t}]\n// \t\t}\n\t\t\n\t\t\n// \t\treturn (\n// \t\t<div>\n// \t\t\t<h1>React Line Chart</h1>\n// \t<CanvasJSChart options = {options} />\n//      </div>\n// \t\t);\n// \t}\n// }\n\n// export default Graph; \n\n\n// import React from 'react'\n \nfunction Graph() {\n\tuseLagRadar();\n\tconst { data, randomizeData } = useDemoConfig({\n\t  series: 10,\n\t  dataType: \"ordinal\"\n\t});\n\tconst series = React.useMemo(\n\t  () => ({\n\t\ttype: \"bar\"\n\t  }),\n\t  []\n\t);\n\tconst axes = React.useMemo(\n\t  () => [\n\t\t{ primary: true, type: \"ordinal\", position: \"left\" },\n\t\t{ position: \"bottom\", type: \"linear\", stacked: true }\n\t  ],\n\t  []\n\t);\n\n\treturn (\n\t\t<>\n\t\t  <button onClick={randomizeData}>Randomize Data</button>\n\t\t  <br />\n\t\t  <br />\n\t\t  <ResizableBox>\n\t\t\t<Chart data={data} series={series} axes={axes} tooltip />\n\t\t  </ResizableBox>\n\t\t</>\n\t  );\n\t// const data = React.useMemo(\n\t//   () => [\n\t// \t{\n\t// \t  label: 'Series 1',\n\t// \t  data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n\t// \t},\n\t// \t{\n\t// \t  label: 'Series 2',\n\t// \t  data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n\t// \t}\n\t//   ],\n\t//   []\n\t// )\n   \n\t// const axes = React.useMemo(\n\t//   () => [\n\t// \t{ primary: true, type: 'linear', position: 'bottom' },\n\t// \t{ type: 'linear', position: 'left' }\n\t//   ],\n\t//   []\n\t// )\n   \n\t// const lineChart = (\n\t//   <div\n\t// \tstyle={{\n\t// \t  width: '800px',\n\t// \t  height: '800px'\n\t// \t}}\n\t//   >\n\t// \t<Chart data={data} axes={axes} />\n\t//   </div>\n\t// )\n\t// return lineChart\n  }\nexport default Graph;\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import { VictoryBar } from 'victory';\n\n// const data=[\n// \t{quarter: 1, earnings: 13000},\n// \t{quarter: 2, earnings: 16500},\n// \t{quarter: 3, earnings: 14250},\n// \t{quarter: 4, earnings: 19000}\n//   ]\n// class Graph extends Component\n// {\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n\n// }\n// render=()=>{\n// \treturn(\n// \t\t<div>\n// \t\t\t{/* {console.log(this.state.data)} */}\n// <VictoryBar data={data} />\n// \t\t</div>\n// \t)\n// }\n// }\n// export default Graph;\n\n// import React,{Component} from 'react';\n// import ReactDOM from 'react-dom';\n\n// const data = [\n// \t{quarter: 1, earnings: 13000},\n// \t{quarter: 2, earnings: 16500},\n// \t{quarter: 3, earnings: 14250},\n// \t{quarter: 4, earnings: 19000},\n// \t{quarter: 5, earnings: 13000},\n// \t{quarter: 6, earnings: 16500},\n// \t{quarter: 7, earnings: 14250},\n// \t{quarter: 8, earnings: 19000},\n// \t{quarter: 9, earnings: 13000},\n// \t{quarter: 10, earnings: 16500},\n// \t{quarter: 11, earnings: 14250},\n// \t{quarter: 12, earnings: 19000}\n//   ];\n//   class Graph extends React.Component {\n// \trender() {\n\t\t\n// \t  return (\n// \t\t<VictoryChart widht={800} domainPadding={20} style={{\n// \t\t\tbackground: { fill: \"white\" }\n// \t\t  }}\n// \t\t  backgroundComponent={<Background/>} animate={{\n// \t\t\tduration: 2000,\n// \t\t\tonLoad: { duration: 1000 }\n// \t\t  }}>\n// \t\t  <VictoryLine\n// \t\t\tdata={data}\n// \t\t\tx=\"quarter\"\n// \t\t\ty=\"earnings\"\n\t\t\t\n// \t\t  />\n// \t\t</VictoryChart>\n// \t  )\n// \t}\n//   }\n//   export default Graph\n//   ReactDOM.render(<App/>, mountNode);\n\n\n\n"]},"metadata":{},"sourceType":"module"}