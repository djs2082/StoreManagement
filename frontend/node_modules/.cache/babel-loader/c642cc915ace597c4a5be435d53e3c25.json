{"ast":null,"code":"var _jsxFileName = \"/home/dilip/Desktop/MERN/himalayadonelocal2/src/components/statistics.component.js\";\nimport React, { Component } from 'react';\nimport Chart from \"react-google-charts\";\nimport Menu from './menu.component';\nimport axios from 'axios';\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      var headers = {\n        'Authorization': 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get('https://shield.pythonanywhere.com/receipts/sales_for_graph/', {\n        headers: headers\n      }).then(response => {\n        console.log(response);\n\n        if (response.status == 200) {\n          if (response.data.status == 404) {\n            this.errorOccured(404, response.data.error.error, \"Error\");\n          } else if (response.data.status == 200) {\n            var data = [];\n\n            if (response.data.status != 404) {\n              data.push(this.state.data);\n              console.log(data);\n              response.data.Data.date_wise_payment_list.map(sell => {\n                let temp = [];\n                temp.push(sell.date);\n                temp.push(sell.amount);\n                data.push(temp);\n                console.log(temp);\n                console.log(data);\n              });\n            }\n\n            this.setState({\n              graph_data: data\n            });\n          } else {\n            console.log('occ');\n            this.errorOccured(response.data.status, response.error.error, \"Unknown Error Occurred\");\n          }\n        } else {\n          console.log('occ');\n          this.errorOccured(500, \"erro occurred\", \"Unknown error occurred\");\n        }\n      }).catch(error => {\n        console.log('occ');\n        this.errorOccured(500, \"error occurred\", error.message);\n      });\n    };\n\n    if (sessionStorage.getItem('token') === 'undefined' || sessionStorage.getItem('username') === 'undefined') {\n      this.props.history.push('/');\n    }\n\n    this.state = {\n      data: ['Sale', '']\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        maxWidth: 900\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      width: 1400,\n      height: 1300,\n      chartType: \"ColumnChart\",\n      loader: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"Loading Chart\"),\n      data: this.state.graph_data,\n      options: {\n        title: 'Sales of This Month',\n        chartArea: {\n          maxWidth: '75%',\n          maHeight: '75%',\n          backgroundColor: \"black\"\n        },\n        hAxis: {\n          title: 'Date'\n        },\n        vAxis: {\n          title: 'Sale'\n        }\n      },\n      legendToggle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 3\n      }\n    })));\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/dilip/Desktop/MERN/himalayadonelocal2/src/components/statistics.component.js"],"names":["React","Component","Chart","Menu","axios","Graph","constructor","props","componentDidMount","headers","sessionStorage","getItem","get","then","response","console","log","status","data","errorOccured","error","push","state","Data","date_wise_payment_list","map","sell","temp","date","amount","setState","graph_data","catch","message","history","render","display","maxWidth","title","chartArea","maHeight","backgroundColor","hAxis","vAxis"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport Chart from \"react-google-charts\";\nimport Menu from './menu.component';\nimport axios from 'axios';\n\nclass Graph extends Component\n{\n    constructor(props)\n    {\n\t\tsuper(props)\n\n        if (sessionStorage.getItem('token') === 'undefined' || sessionStorage.getItem('username') === 'undefined') {\n            this.props.history.push('/')\n        }\n\t\tthis.state={\n\t\t\tdata:['Sale', '']\n\t\t}\n\t}\n\tcomponentDidMount=()=>{\n\t\tvar headers = {\n\t\t\t'Authorization': 'Token '+sessionStorage.getItem('token')\n\t\t  }\n\t\t  axios.get('https://shield.pythonanywhere.com/receipts/sales_for_graph/',{\n\t\t\theaders: headers\n\t\t  })\n\t\t  .then(response => {\n\t\t\tconsole.log(response)\n\t\t\tif(response.status == 200)\n\t\t\t{\n\t\n\t\t\t\tif(response.data.status == 404)\n\t\t\t\t{\n\t\t\t\t\tthis.errorOccured(404,response.data.error.error,\"Error\")\n\t\t\t\t}\n\t\t\t\n\t\t\t\telse if(response.data.status == 200)\n\t\t\t\t{\n\t\t\t\t\tvar data=[]\n\t\t\t\t\tif(response.data.status != 404)\n\t\t\t\t\t{\n\t\t\t\t\tdata.push(this.state.data)\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t\tresponse.data.Data.date_wise_payment_list.map(sell=>{\n\t\t\t\t\t\tlet temp=[]\n\t\t\t\t\t\ttemp.push(sell.date)\n\t\t\t\t\t\ttemp.push(sell.amount)\n\t\t\t\t\t\tdata.push(temp)\n\t\t\t\t\t\tconsole.log(temp)\n\t\t\t\t\t\tconsole.log(data)\n\t\t\t\t\t})\n\t\t\t\t  }\n\t\t\t\t  this.setState({graph_data:data})\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconsole.log('occ')\n\t\t\t\t\tthis.errorOccured(response.data.status,response.error.error,\"Unknown Error Occurred\")\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole.log('occ')\n\t\t\t\tthis.errorOccured(500,\"erro occurred\",\"Unknown error occurred\")\n\t\n\t\t\t}\n\t\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log('occ')\n\t\t\tthis.errorOccured(500,\"error occurred\",error.message)\n\t\t});\n\n\t}\n    render()\n    {\n        return(\n            <div>\n\t\t\t\t <Menu></Menu>\n<div style={{ display: 'flex',maxWidth: 900 }}>\n  <Chart\n    width={1400}\n    height={1300}\n    chartType=\"ColumnChart\"\n    loader={<div>Loading Chart</div>}\n    data={this.state.graph_data}\n    options={{\n      title: 'Sales of This Month',\n      chartArea: { maxWidth: '75%',maHeight:'75%',backgroundColor:\"black\" },\n      hAxis: {\n        title: 'Date',\n      },\n      vAxis: {\n        title: 'Sale',\n      },\n    }}\n    legendToggle\n  />\n \n</div></div>)}\n}\nexport default Graph;"]},"metadata":{},"sourceType":"module"}