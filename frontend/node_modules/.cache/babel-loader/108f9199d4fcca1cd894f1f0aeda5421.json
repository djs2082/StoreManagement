{"ast":null,"code":"var _jsxFileName = \"/home/dilip/Desktop/MERN/himalayafinal/src/components/statistics.component.js\";\nimport React, { Component } from 'react';\nimport Chart from \"react-google-charts\";\nimport Menu from './menu.component';\nimport axios from 'axios';\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      var headers = {\n        'Authorization': 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get('http://127.0.0.1:8000/receipts/sales_for_graph/', {\n        headers: headers\n      }).then(response => {\n        var data = [];\n        data.push(this.state.data);\n        console.log(data);\n        response.data.Data.date_wise_payment_list.map(sell => {\n          let temp = [];\n          temp.push(sell.date);\n          temp.push(sell.amount);\n          data.push(temp);\n          console.log(temp);\n          console.log(data);\n        });\n        this.setState({\n          graph_data: data\n        });\n      });\n    };\n\n    if (sessionStorage.getItem('token') == null || sessionStorage.getItem('username')) {\n      this.props.history.push('/');\n    }\n\n    this.state = {\n      data: ['Sale', '']\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        maxWidth: 900\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      width: 1400,\n      height: 1300,\n      chartType: \"ColumnChart\",\n      loader: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, \"Loading Chart\"),\n      data: this.state.graph_data,\n      options: {\n        title: 'Sales of This Month',\n        chartArea: {\n          width: '75%',\n          height: '75%',\n          backgroundColor: \"black\"\n        },\n        hAxis: {\n          title: 'Date'\n        },\n        vAxis: {\n          title: 'Sale'\n        }\n      },\n      legendToggle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }\n    })));\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/dilip/Desktop/MERN/himalayafinal/src/components/statistics.component.js"],"names":["React","Component","Chart","Menu","axios","Graph","constructor","props","componentDidMount","headers","sessionStorage","getItem","get","then","response","data","push","state","console","log","Data","date_wise_payment_list","map","sell","temp","date","amount","setState","graph_data","history","render","display","maxWidth","title","chartArea","width","height","backgroundColor","hAxis","vAxis"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport Chart from \"react-google-charts\";\nimport Menu from './menu.component';\nimport axios from 'axios';\n\nclass Graph extends Component\n{\n    constructor(props)\n    {\n\t\tsuper(props)\n\t\tif(sessionStorage.getItem('token') == null || sessionStorage.getItem('username'))\n        {\n            this.props.history.push('/')\n        }\n\t\tthis.state={\n\t\t\tdata:['Sale', '']\n\t\t}\n\t}\n\tcomponentDidMount=()=>{\n\t\tvar headers = {\n\t\t\t'Authorization': 'Token '+sessionStorage.getItem('token')\n\t\t  }\n\t\t  axios.get('http://127.0.0.1:8000/receipts/sales_for_graph/',{\n\t\t\theaders: headers\n\t\t  })\n\t\t  .then(response =>{\n\t\t\t  var data=[]\n\t\t\t  data.push(this.state.data)\n\t\t\t  console.log(data)\n\t\t\t  response.data.Data.date_wise_payment_list.map(sell=>{\n\t\t\t\t  let temp=[]\n\t\t\t\t  temp.push(sell.date)\n\t\t\t\t  temp.push(sell.amount)\n\t\t\t\t  data.push(temp)\n\t\t\t\t  console.log(temp)\n\t\t\t\t  console.log(data)\n\t\t\t  })\n\t\t\tthis.setState({graph_data:data})\n\n\t\t  })\n\t}\n    render()\n    {\n        return(\n            <div>\n\t\t\t\t <Menu></Menu>\n<div style={{ display: 'flex',maxWidth: 900 }}>\n  <Chart\n    width={1400}\n    height={1300}\n    chartType=\"ColumnChart\"\n    loader={<div>Loading Chart</div>}\n    data={this.state.graph_data}\n    options={{\n      title: 'Sales of This Month',\n      chartArea: { width: '75%',height:'75%',backgroundColor:\"black\" },\n      hAxis: {\n        title: 'Date',\n      },\n      vAxis: {\n        title: 'Sale',\n      },\n    }}\n    legendToggle\n  />\n \n</div></div>)}\n}\nexport default Graph;"]},"metadata":{},"sourceType":"module"}