{"ast":null,"code":"var _jsxFileName = \"/home/dilip/Desktop/MERN/himalaya/src/components/statistics.component.js\";\n// import React, { Component } from 'react';\n// import CanvasJSReact from '../canvas/canvasjs.react';\n// var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n// class Graph extends Component {\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n// \t\tthis.state={\n// \t\t\tdataPoints:[\n// \t\t\t\t{ x: 1, y: 64 },\n// \t\t\t\t{ x: 2, y: 61 },\n// \t\t\t\t{ x: 3, y: 64 },\n// \t\t\t\t{ x: 4, y: 62 },\n// \t\t\t\t{ x: 5, y: 64 },\n// \t\t\t\t{ x: 6, y: 60 },\n// \t\t\t\t{ x: 7, y: 58 },\n// \t\t\t\t{ x: 8, y: 59 },\n// \t\t\t\t{ x: 9, y: 53 },\n// \t\t\t\t{ x: 10, y: 54 },\n// \t\t\t\t{ x: 11, y: 61 },\n// \t\t\t\t{ x: 12, y: 60 },\n// \t\t\t\t{ x: 13, y: 55 },\n// \t\t\t\t{ x: 14, y: 60 },\n// \t\t\t\t{ x: 15, y: 56 },\n// \t\t\t\t{ x: 16, y: 60 },\n// \t\t\t\t{ x: 17, y: 59.5 },\n// \t\t\t\t{ x: 18, y: 63 },\n// \t\t\t\t{ x: 19, y: 58 },\n// \t\t\t\t{ x: 20, y: 54 },\n// \t\t\t\t{ x: 21, y: 59 },\n// \t\t\t\t{ x: 22, y: 64 },\n// \t\t\t\t{ x: 23, y: 59 }\n// \t\t\t]\n// \t\t}\n// \t}\n// \trender() {\n// \t\tconst options = {\n// \t\t\tanimationEnabled: true,\n// \t\t\texportEnabled: true,\n// \t\t\ttheme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\n// \t\t\ttitle:{\n// \t\t\t\ttext: \"Sale Datewise for last month\"\n// \t\t\t},\n// \t\t\taxisY: {\n// \t\t\t\ttitle: \"Sales(in Rs)\",\n// \t\t\t\tincludeZero: false,\n// \t\t\t},\n// \t\t\taxisX: {\n// \t\t\t\ttitle: \"Dates\",\n// \t\t\t\tinterval: 2\n// \t\t\t},\n// \t\t\tdata: [{\n// \t\t\t\ttype: \"line\",\n// \t\t\t\ttoolTipContent: \"Date {x}: {y}%\",\n// \t\t\t\tdataPoints: this.state.dataPoints\n// \t\t\t}]\n// \t\t}\n// \t\treturn (\n// \t\t<div>\n// \t\t\t<h1>React Line Chart</h1>\n// \t\t\t<CanvasJSChart options = {options} \n// \t\t\t\t/* onRef={ref => this.chart = ref} */\n// \t\t\t/>\n// \t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n// \t\t</div>\n// \t\t);\n// \t}\n// }\n// export default Graph; \nimport React from 'react';\nimport { Chart } from 'react-charts';\nexport function Graph() {\n  const data = React.useMemo(() => [{\n    label: 'Series 1',\n    data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n  }, {\n    label: 'Series 2',\n    data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n  }], []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'curveStep',\n    position: 'bottom'\n  }, {\n    type: 'curveStep',\n    position: 'left'\n  }], []);\n  const barChart =\n  /*#__PURE__*/\n  // A react-chart hyper-responsively and continuously fills the available\n  // space of its parent element automatically\n  React.createElement(\"div\", {\n    style: {\n      width: '400px',\n      height: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    data: data,\n    axes: axes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n  return barChart;\n}\nexport default Graph;","map":{"version":3,"sources":["/home/dilip/Desktop/MERN/himalaya/src/components/statistics.component.js"],"names":["React","Chart","Graph","data","useMemo","label","axes","primary","type","position","barChart","width","height"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,OAAO,SAASC,KAAT,GAAiB;AACtB,QAAMC,IAAI,GAAGH,KAAK,CAACI,OAAN,CACX,MAAM,CACJ;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEF,IAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC;AAFR,GADI,EAKJ;AACEE,IAAAA,KAAK,EAAE,UADT;AAEEF,IAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC;AAFR,GALI,CADK,EAWX,EAXW,CAAb;AAcA,QAAMG,IAAI,GAAGN,KAAK,CAACI,OAAN,CACX,MAAM,CACJ;AAAEG,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,IAAI,EAAE,WAAvB;AAAoCC,IAAAA,QAAQ,EAAE;AAA9C,GADI,EAEJ;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAFI,CADK,EAKX,EALW,CAAb;AAQA,QAAMC,QAAQ;AAAA;AACZ;AACA;AACA;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE;AAFH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAET,IAAb;AAAmB,IAAA,IAAI,EAAEG,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHF;AAYA,SAAOI,QAAP;AACD;AACD,eAAeR,KAAf","sourcesContent":["// import React, { Component } from 'react';\n// import CanvasJSReact from '../canvas/canvasjs.react';\n// var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n \n// class Graph extends Component {\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n// \t\tthis.state={\n// \t\t\tdataPoints:[\n// \t\t\t\t{ x: 1, y: 64 },\n// \t\t\t\t{ x: 2, y: 61 },\n// \t\t\t\t{ x: 3, y: 64 },\n// \t\t\t\t{ x: 4, y: 62 },\n// \t\t\t\t{ x: 5, y: 64 },\n// \t\t\t\t{ x: 6, y: 60 },\n// \t\t\t\t{ x: 7, y: 58 },\n// \t\t\t\t{ x: 8, y: 59 },\n// \t\t\t\t{ x: 9, y: 53 },\n// \t\t\t\t{ x: 10, y: 54 },\n// \t\t\t\t{ x: 11, y: 61 },\n// \t\t\t\t{ x: 12, y: 60 },\n// \t\t\t\t{ x: 13, y: 55 },\n// \t\t\t\t{ x: 14, y: 60 },\n// \t\t\t\t{ x: 15, y: 56 },\n// \t\t\t\t{ x: 16, y: 60 },\n// \t\t\t\t{ x: 17, y: 59.5 },\n// \t\t\t\t{ x: 18, y: 63 },\n// \t\t\t\t{ x: 19, y: 58 },\n// \t\t\t\t{ x: 20, y: 54 },\n// \t\t\t\t{ x: 21, y: 59 },\n// \t\t\t\t{ x: 22, y: 64 },\n// \t\t\t\t{ x: 23, y: 59 }\n// \t\t\t]\n// \t\t}\n// \t}\n// \trender() {\n// \t\tconst options = {\n// \t\t\tanimationEnabled: true,\n// \t\t\texportEnabled: true,\n// \t\t\ttheme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\n// \t\t\ttitle:{\n// \t\t\t\ttext: \"Sale Datewise for last month\"\n// \t\t\t},\n// \t\t\taxisY: {\n// \t\t\t\ttitle: \"Sales(in Rs)\",\n// \t\t\t\tincludeZero: false,\n// \t\t\t},\n// \t\t\taxisX: {\n// \t\t\t\ttitle: \"Dates\",\n// \t\t\t\tinterval: 2\n// \t\t\t},\n// \t\t\tdata: [{\n// \t\t\t\ttype: \"line\",\n// \t\t\t\ttoolTipContent: \"Date {x}: {y}%\",\n// \t\t\t\tdataPoints: this.state.dataPoints\n// \t\t\t}]\n// \t\t}\n\t\t\n// \t\treturn (\n// \t\t<div>\n// \t\t\t<h1>React Line Chart</h1>\n// \t\t\t<CanvasJSChart options = {options} \n// \t\t\t\t/* onRef={ref => this.chart = ref} */\n// \t\t\t/>\n// \t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n// \t\t</div>\n// \t\t);\n// \t}\n// }\n\n// export default Graph; \n\n\nimport React from 'react'\nimport { Chart } from 'react-charts'\n \nexport function Graph() {\n  const data = React.useMemo(\n    () => [\n      {\n        label: 'Series 1',\n        data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n      },\n      {\n        label: 'Series 2',\n        data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n      }\n    ],\n    []\n  )\n \n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: 'curveStep', position: 'bottom' },\n      { type: 'curveStep', position: 'left' }\n    ],\n    []\n  )\n \n  const barChart = (\n    // A react-chart hyper-responsively and continuously fills the available\n    // space of its parent element automatically\n    <div\n      style={{\n        width: '400px',\n        height: '300px'\n      }}\n    >\n      <Chart data={data} axes={axes} />\n    </div>\n  )\n  return barChart;\n}\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}