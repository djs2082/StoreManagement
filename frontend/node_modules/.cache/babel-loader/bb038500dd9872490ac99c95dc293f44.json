{"ast":null,"code":"var _jsxFileName = \"/home/dilip/Desktop/MERN/himalayafinal/src/components/statistics3.component.js\";\nimport React, { Component } from 'react';\nimport Chart from \"react-google-charts\"; // or\n// import { Chart } from \"react-google-charts\";\n// // or\n// const { Chart } = require(\"react-google-charts\");\n// // or\n// var Chart = require(\"react-google-charts\").Chart;\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        maxWidth: 900\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      width: 400,\n      height: 300,\n      chartType: \"ColumnChart\",\n      loader: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, \"Loading Chart\"),\n      data: [['City', '2010 Population', '2000 Population'], ['New York City, NY', 8175000, 8008000], ['Los Angeles, CA', 3792000, 3694000], ['Chicago, IL', 2695000, 2896000], ['Houston, TX', 2099000, 1953000], ['Philadelphia, PA', 1526000, 1517000]],\n      options: {\n        title: 'Population of Largest U.S. Cities',\n        chartArea: {\n          width: '30%'\n        },\n        hAxis: {\n          title: 'Total Population',\n          minValue: 0\n        },\n        vAxis: {\n          title: 'City'\n        }\n      },\n      legendToggle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 3\n      }\n    })));\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/dilip/Desktop/MERN/himalayafinal/src/components/statistics3.component.js"],"names":["React","Component","Chart","Graph","constructor","props","render","display","maxWidth","title","chartArea","width","hAxis","minValue","vAxis"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAN,SAAoBF,SAApB,CACA;AACIG,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACH;;AACDC,EAAAA,MAAM,GACN;AACI,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACZ;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,GADT;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,SAAS,EAAC,aAHZ;AAIE,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJV;AAKE,MAAA,IAAI,EAAE,CACJ,CAAC,MAAD,EAAS,iBAAT,EAA4B,iBAA5B,CADI,EAEJ,CAAC,mBAAD,EAAsB,OAAtB,EAA+B,OAA/B,CAFI,EAGJ,CAAC,iBAAD,EAAoB,OAApB,EAA6B,OAA7B,CAHI,EAIJ,CAAC,aAAD,EAAgB,OAAhB,EAAyB,OAAzB,CAJI,EAKJ,CAAC,aAAD,EAAgB,OAAhB,EAAyB,OAAzB,CALI,EAMJ,CAAC,kBAAD,EAAqB,OAArB,EAA8B,OAA9B,CANI,CALR;AAaE,MAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,mCADA;AAEPC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFJ;AAGPC,QAAAA,KAAK,EAAE;AACLH,UAAAA,KAAK,EAAE,kBADF;AAELI,UAAAA,QAAQ,EAAE;AAFL,SAHA;AAOPC,QAAAA,KAAK,EAAE;AACLL,UAAAA,KAAK,EAAE;AADF;AAPA,OAbX;AAwBE,MAAA,YAAY,MAxBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADY,CADJ;AA8BM;;AArCd;;AAuCA,eAAeN,KAAf","sourcesContent":["import React,{Component} from 'react'\nimport Chart from \"react-google-charts\";\n// or\n// import { Chart } from \"react-google-charts\";\n// // or\n// const { Chart } = require(\"react-google-charts\");\n// // or\n// var Chart = require(\"react-google-charts\").Chart;\nclass Graph extends Component\n{\n    constructor(props)\n    {\n        super(props)\n    }\n    render()\n    {\n        return(\n            <div>\n<div style={{ display: 'flex', maxWidth: 900 }}>\n  <Chart\n    width={400}\n    height={300}\n    chartType=\"ColumnChart\"\n    loader={<div>Loading Chart</div>}\n    data={[\n      ['City', '2010 Population', '2000 Population'],\n      ['New York City, NY', 8175000, 8008000],\n      ['Los Angeles, CA', 3792000, 3694000],\n      ['Chicago, IL', 2695000, 2896000],\n      ['Houston, TX', 2099000, 1953000],\n      ['Philadelphia, PA', 1526000, 1517000],\n    ]}\n    options={{\n      title: 'Population of Largest U.S. Cities',\n      chartArea: { width: '30%' },\n      hAxis: {\n        title: 'Total Population',\n        minValue: 0,\n      },\n      vAxis: {\n        title: 'City',\n      },\n    }}\n    legendToggle\n  />\n \n</div></div>)}\n}\nexport default Graph;"]},"metadata":{},"sourceType":"module"}