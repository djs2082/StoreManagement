{"ast":null,"code":"var _jsxFileName = \"/home/dilip/Desktop/MERN/himalaya/src/components/statistics.component.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../canvas/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataPoints: [{\n        x: '01-01-2020',\n        y: 64\n      }, {\n        x: '02-01-2020',\n        y: 64\n      } // { x: '01-01-2020', y: 64 },\n      // { x: '02-01-2020', y: 64 },\n      // { x: '03-01-2020', y: 59},\n      // { x: '04-01-2020', y: 64 },\n      // { x: '05-01-2020', y: 61 },\n      // { x: '06-01-2020', y: 64 },\n      // { x: '07-01-2020', y: 62 },\n      // { x: '08-01-2020', y: 64 },\n      // { x: '09-01-2020', y: 60 },\n      // { x: '10-01-2020', y: 58 },\n      // { x: '11-01-2020', y: 59 },\n      // { x: '12-01-2020', y: 64 },\n      // { x: '13-01-2020', y: 59},\n      // { x: '14-01-2020', y: 64 },\n      // { x: '15-01-2020', y: 61 },\n      // { x: '16-01-2020', y: 64 },\n      // { x: '17-01-2020', y: 62 },\n      // { x: '18-01-2020', y: 64 },\n      // { x: '19-01-2020', y: 60 },\n      // { x: '20-01-2020', y: 58 },\n      // { x: '21-01-2020', y: 59 },\n      // { x: '22-01-2020', y: 64 },\n      // { x: '23-01-2020', y: 59},\n      // { x: '24-01-2020', y: 64 },\n      // { x: '25-01-2020', y: 61 },\n      // { x: '26-01-2020', y: 64 },\n      // { x: '27-01-2020', y: 62 },\n      // { x: '28-01-2020', y: 64 },\n      // { x: '29-01-2020', y: 60 },\n      // { x: '30-01-2020', y: 58 },\n      // { x: '31-01-2020', y: 59 }\n      ]\n    };\n  }\n\n  render() {\n    const options = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light1\",\n      // \"light1\", \"dark1\", \"dark2\"\n      backgroundColor: \"rgb(0,0,0)\",\n      title: {\n        text: \"Sale Datewise for last month\",\n        fontColor: 'rgb(255,255,255)'\n      },\n      axisY: {\n        title: \"Sales(in Rs)\",\n        fontColor: 'rgb(255,255,255)',\n        includeZero: false,\n        labelFontColor: \"rgb(255,255,255)\"\n      },\n      axisX: {\n        title: \"Dates\",\n        fontColor: 'rgb(255,255,255)',\n        interval: 2,\n        labelFontColor: \"rgb(255,255,255)\"\n      },\n      height: 1000,\n      data: [{\n        type: \"line\",\n        toolTipContent: \"Date {x}: {y}%\",\n        dataPoints: this.state.dataPoints\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }\n    }, \"React Line Chart\"), /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 2\n      }\n    }));\n  }\n\n}\n\nexport default Graph; // import React from 'react'\n// import { Chart } from 'react-charts'\n// export function Graph() {\n//   const data = React.useMemo(\n//     () => [\n//       {\n//         label: 'Series 1',\n//         data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n//       },\n//       {\n//         label: 'Series 2',\n//         data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n//       }\n//     ],\n//     []\n//   )\n//   const axes = React.useMemo(\n//     () => [\n//       { primary: true, type: 'bar', position: 'bottom' },\n//       { type: 'bar', position: 'left' }\n//     ],\n//     []\n//   )\n//   const barChart = (\n// A react-chart hyper-responsively and continuously fills the available\n// space of its parent element automatically\n//     <div\n//       style={{\n//         width: '400px',\n//         height: '300px'\n//       }}\n//     >\n//       <Chart data={data} axes={axes} />\n//     </div>\n//   )\n//   return barChart;\n// }\n// export default Graph;\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import { VictoryBar } from 'victory';\n// const data=[\n// \t{quarter: 1, earnings: 13000},\n// \t{quarter: 2, earnings: 16500},\n// \t{quarter: 3, earnings: 14250},\n// \t{quarter: 4, earnings: 19000}\n//   ]\n// class Graph extends Component\n// {\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n// }\n// render=()=>{\n// \treturn(\n// \t\t<div>\n// \t\t\t{console.log(this.state.data)}\n// <VictoryBar data={data} />\n// \t\t</div>\n// \t)\n// }\n// }\n// export default Graph;\n// import React,{Component} from 'react';\n// import ReactDOM from 'react-dom';\n// import * as V from 'victory';\n// import { VictoryLine, VictoryChart,VictoryTheme,Background } from 'victory'\n// const data = [\n// \t{quarter: 1, earnings: 13000},\n// \t{quarter: 2, earnings: 16500},\n// \t{quarter: 3, earnings: 14250},\n// \t{quarter: 4, earnings: 19000},\n// \t{quarter: 5, earnings: 13000},\n// \t{quarter: 6, earnings: 16500},\n// \t{quarter: 7, earnings: 14250},\n// \t{quarter: 8, earnings: 19000},\n// \t{quarter: 9, earnings: 13000},\n// \t{quarter: 10, earnings: 16500},\n// \t{quarter: 11, earnings: 14250},\n// \t{quarter: 12, earnings: 19000}\n//   ];\n//   class Graph extends React.Component {\n// \trender() {\n// \t  return (\n// \t\t<VictoryChart widht={800} domainPadding={20} style={{\n// \t\t\tbackground: { fill: \"white\" }\n// \t\t  }}\n// \t\t  backgroundComponent={<Background/>} animate={{\n// \t\t\tduration: 2000,\n// \t\t\tonLoad: { duration: 1000 }\n// \t\t  }}>\n// \t\t  <VictoryLine\n// \t\t\tdata={data}\n// \t\t\tx=\"quarter\"\n// \t\t\ty=\"earnings\"\n// \t\t  />\n// \t\t</VictoryChart>\n// \t  )\n// \t}\n//   }\n//   export default Graph\n//   ReactDOM.render(<App/>, mountNode);","map":{"version":3,"sources":["/home/dilip/Desktop/MERN/himalaya/src/components/statistics.component.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","Graph","constructor","props","state","dataPoints","x","y","render","options","animationEnabled","exportEnabled","theme","backgroundColor","title","text","fontColor","axisY","includeZero","labelFontColor","axisX","interval","height","data","type","toolTipContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACVC,MAAAA,UAAU,EAAC,CACT;AAAEC,QAAAA,CAAC,EAAE,YAAL;AAAmBC,QAAAA,CAAC,EAAE;AAAtB,OADS,EAET;AAAED,QAAAA,CAAC,EAAE,YAAL;AAAmBC,QAAAA,CAAC,EAAE;AAAtB,OAFS,CAIV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCU;AADD,KAAX;AAuCA;;AACDC,EAAAA,MAAM,GAAG;AACR,UAAMC,OAAO,GAAG;AACfC,MAAAA,gBAAgB,EAAE,IADH;AAEfC,MAAAA,aAAa,EAAE,IAFA;AAGfC,MAAAA,KAAK,EAAE,QAHQ;AAGE;AACjBC,MAAAA,eAAe,EAAC,YAJD;AAKfC,MAAAA,KAAK,EAAC;AACLC,QAAAA,IAAI,EAAE,8BADD;AAELC,QAAAA,SAAS,EAAC;AAFL,OALS;AASfC,MAAAA,KAAK,EAAE;AACNH,QAAAA,KAAK,EAAE,cADD;AAENE,QAAAA,SAAS,EAAC,kBAFJ;AAGNE,QAAAA,WAAW,EAAE,KAHP;AAINC,QAAAA,cAAc,EAAC;AAJT,OATQ;AAefC,MAAAA,KAAK,EAAE;AACNN,QAAAA,KAAK,EAAE,OADD;AAENE,QAAAA,SAAS,EAAC,kBAFJ;AAGNK,QAAAA,QAAQ,EAAE,CAHJ;AAINF,QAAAA,cAAc,EAAC;AAJT,OAfQ;AAqBfG,MAAAA,MAAM,EAAC,IArBQ;AAsBfC,MAAAA,IAAI,EAAE,CAAC;AACNC,QAAAA,IAAI,EAAE,MADA;AAENC,QAAAA,cAAc,EAAE,gBAFV;AAGNpB,QAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC;AAHjB,OAAD;AAtBS,KAAhB;AA8BA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,eAED,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAII,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,CADA;AAMA;;AAjF4B;;AAoF9B,eAAeR,KAAf,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACI;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport CanvasJSReact from '../canvas/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n \nclass Graph extends Component {\n\tconstructor(props)\n\t{\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\tdataPoints:[\n\t\t\t\t { x: '01-01-2020', y: 64 },\n\t\t\t\t { x: '02-01-2020', y: 64 },\n\n\t\t\t\t// { x: '01-01-2020', y: 64 },\n\t\t\t\t// { x: '02-01-2020', y: 64 },\n\t\t\t\t// { x: '03-01-2020', y: 59},\n\t\t\t\t// { x: '04-01-2020', y: 64 },\n\t\t\t\t// { x: '05-01-2020', y: 61 },\n\t\t\t\t// { x: '06-01-2020', y: 64 },\n\t\t\t\t// { x: '07-01-2020', y: 62 },\n\t\t\t\t// { x: '08-01-2020', y: 64 },\n\t\t\t\t// { x: '09-01-2020', y: 60 },\n\t\t\t\t// { x: '10-01-2020', y: 58 },\n\t\t\t\t// { x: '11-01-2020', y: 59 },\n\t\t\t\t// { x: '12-01-2020', y: 64 },\n\t\t\t\t// { x: '13-01-2020', y: 59},\n\t\t\t\t// { x: '14-01-2020', y: 64 },\n\t\t\t\t// { x: '15-01-2020', y: 61 },\n\t\t\t\t// { x: '16-01-2020', y: 64 },\n\t\t\t\t// { x: '17-01-2020', y: 62 },\n\t\t\t\t// { x: '18-01-2020', y: 64 },\n\t\t\t\t// { x: '19-01-2020', y: 60 },\n\t\t\t\t// { x: '20-01-2020', y: 58 },\n\t\t\t\t// { x: '21-01-2020', y: 59 },\n\t\t\t\t// { x: '22-01-2020', y: 64 },\n\t\t\t\t// { x: '23-01-2020', y: 59},\n\t\t\t\t// { x: '24-01-2020', y: 64 },\n\t\t\t\t// { x: '25-01-2020', y: 61 },\n\t\t\t\t// { x: '26-01-2020', y: 64 },\n\t\t\t\t// { x: '27-01-2020', y: 62 },\n\t\t\t\t// { x: '28-01-2020', y: 64 },\n\t\t\t\t// { x: '29-01-2020', y: 60 },\n\t\t\t\t// { x: '30-01-2020', y: 58 },\n\t\t\t\t// { x: '31-01-2020', y: 59 }\n\t\t\t]\n\t\t\n\t\t}\n\t}\n\trender() {\n\t\tconst options = {\n\t\t\tanimationEnabled: true,\n\t\t\texportEnabled: true,\n\t\t\ttheme: \"light1\", // \"light1\", \"dark1\", \"dark2\"\n\t\t\tbackgroundColor:\"rgb(0,0,0)\",\n\t\t\ttitle:{\n\t\t\t\ttext: \"Sale Datewise for last month\",\n\t\t\t\tfontColor:'rgb(255,255,255)'\n\t\t\t},\n\t\t\taxisY: {\n\t\t\t\ttitle: \"Sales(in Rs)\",\n\t\t\t\tfontColor:'rgb(255,255,255)',\n\t\t\t\tincludeZero: false,\n\t\t\t\tlabelFontColor:\"rgb(255,255,255)\"\n\t\t\t},\n\t\t\taxisX: {\n\t\t\t\ttitle: \"Dates\",\n\t\t\t\tfontColor:'rgb(255,255,255)',\n\t\t\t\tinterval: 2,\n\t\t\t\tlabelFontColor:\"rgb(255,255,255)\"\n\t\t\t},\n\t\t\theight:1000,\n\t\t\tdata: [{\n\t\t\t\ttype: \"line\",\n\t\t\t\ttoolTipContent: \"Date {x}: {y}%\",\n\t\t\t\tdataPoints: this.state.dataPoints\n\t\t\t}]\n\t\t}\n\t\t\n\t\t\n\t\treturn (\n\t\t<div>\n\t\t\t<h1>React Line Chart</h1>\n\t<CanvasJSChart options = {options} />\n     </div>\n\t\t);\n\t}\n}\n\nexport default Graph; \n\n\n// import React from 'react'\n// import { Chart } from 'react-charts'\n \n// export function Graph() {\n//   const data = React.useMemo(\n//     () => [\n//       {\n//         label: 'Series 1',\n//         data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n//       },\n//       {\n//         label: 'Series 2',\n//         data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n//       }\n//     ],\n//     []\n//   )\n \n//   const axes = React.useMemo(\n//     () => [\n//       { primary: true, type: 'bar', position: 'bottom' },\n//       { type: 'bar', position: 'left' }\n//     ],\n//     []\n//   )\n \n//   const barChart = (\n    // A react-chart hyper-responsively and continuously fills the available\n    // space of its parent element automatically\n//     <div\n//       style={{\n//         width: '400px',\n//         height: '300px'\n//       }}\n//     >\n//       <Chart data={data} axes={axes} />\n//     </div>\n//   )\n//   return barChart;\n// }\n// export default Graph;\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import { VictoryBar } from 'victory';\n\n// const data=[\n// \t{quarter: 1, earnings: 13000},\n// \t{quarter: 2, earnings: 16500},\n// \t{quarter: 3, earnings: 14250},\n// \t{quarter: 4, earnings: 19000}\n//   ]\n// class Graph extends Component\n// {\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n\n// }\n// render=()=>{\n// \treturn(\n// \t\t<div>\n// \t\t\t{console.log(this.state.data)}\n// <VictoryBar data={data} />\n// \t\t</div>\n// \t)\n// }\n// }\n// export default Graph;\n\n// import React,{Component} from 'react';\n// import ReactDOM from 'react-dom';\n// import * as V from 'victory';\n// import { VictoryLine, VictoryChart,VictoryTheme,Background } from 'victory'\n// const data = [\n// \t{quarter: 1, earnings: 13000},\n// \t{quarter: 2, earnings: 16500},\n// \t{quarter: 3, earnings: 14250},\n// \t{quarter: 4, earnings: 19000},\n// \t{quarter: 5, earnings: 13000},\n// \t{quarter: 6, earnings: 16500},\n// \t{quarter: 7, earnings: 14250},\n// \t{quarter: 8, earnings: 19000},\n// \t{quarter: 9, earnings: 13000},\n// \t{quarter: 10, earnings: 16500},\n// \t{quarter: 11, earnings: 14250},\n// \t{quarter: 12, earnings: 19000}\n//   ];\n//   class Graph extends React.Component {\n// \trender() {\n\t\t\n// \t  return (\n// \t\t<VictoryChart widht={800} domainPadding={20} style={{\n// \t\t\tbackground: { fill: \"white\" }\n// \t\t  }}\n// \t\t  backgroundComponent={<Background/>} animate={{\n// \t\t\tduration: 2000,\n// \t\t\tonLoad: { duration: 1000 }\n// \t\t  }}>\n// \t\t  <VictoryLine\n// \t\t\tdata={data}\n// \t\t\tx=\"quarter\"\n// \t\t\ty=\"earnings\"\n\t\t\t\n// \t\t  />\n// \t\t</VictoryChart>\n// \t  )\n// \t}\n//   }\n//   export default Graph\n//   ReactDOM.render(<App/>, mountNode);\n\n\n\n"]},"metadata":{},"sourceType":"module"}