{"ast":null,"code":"import React from \"react\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nexport default function useLagRadar() {\n  const [width, height] = useWindowSize();\n  React.useEffect(() => {\n    return lagRadar({\n      frames: 60,\n      // number of frames to draw, more = worse performance\n      speed: 0.0017,\n      // how fast the sweep moves (rads per ms)\n      size: Math.min(width, height) / 3,\n      // outer frame px\n      inset: 3,\n      // circle inset px\n      parent: document.body // DOM node to attach to\n\n    });\n  }, [width, height]);\n}\n/**\n * lagRadar\n * Licence: ISC copyright: @mobz 2018\n */\n\nfunction lagRadar(config = {}) {\n  const {\n    frames = 50,\n    // number of frames to draw, more = worse performance\n    speed = 0.0017,\n    // how fast the sweep moves (rads per ms)\n    size = 300,\n    // outer frame px\n    inset = 3,\n    // circle inset px\n    parent = document.body // DOM node to attach to\n\n  } = config;\n  const svgns = \"http://www.w3.org/2000/svg\";\n  const styles = document.createTextNode(`\n    .lagRadar-sweep > * {\n      shape-rendering: crispEdges;\n    }\n    .lagRadar-face {\n      fill: transparent;\n    }\n    .lagRadar-hand {\n      stroke-width: 4px;\n      stroke-linecap: round;\n    }\n  `);\n\n  function $svg(tag, props = {}, children = []) {\n    const el = document.createElementNS(svgns, tag);\n    Object.keys(props).forEach(prop => el.setAttribute(prop, props[prop]));\n    children.forEach(child => el.appendChild(child));\n    return el;\n  }\n\n  const PI2 = Math.PI * 2;\n  const middle = size / 2;\n  const radius = middle - inset;\n  const $hand = $svg(\"path\", {\n    class: \"lagRadar-hand\"\n  });\n  const $arcs = new Array(frames).fill(\"path\").map(t => $svg(t));\n  const $root = $svg(\"svg\", {\n    class: \"lagRadar\",\n    height: size,\n    width: size\n  }, [$svg(\"style\", {\n    type: \"text/css\"\n  }, [styles]), $svg(\"g\", {\n    class: \"lagRadar-sweep\"\n  }, $arcs), $hand, $svg(\"circle\", {\n    class: \"lagRadar-face\",\n    cx: middle,\n    cy: middle,\n    r: radius\n  })]);\n  parent.appendChild($root);\n  let frame;\n  let framePtr = 0;\n  let last = {\n    rotation: 0,\n    now: Date.now(),\n    tx: middle + radius,\n    ty: middle\n  };\n\n  const calcHue = (() => {\n    const max_hue = 120;\n    const max_ms = 1000;\n    const log_f = 10;\n    const mult = max_hue / Math.log(max_ms / log_f);\n    return function (ms_delta) {\n      return max_hue - Math.max(0, Math.min(mult * Math.log(ms_delta / log_f), max_hue));\n    };\n  })();\n\n  function animate() {\n    const now = Date.now();\n    const rdelta = Math.min(PI2 - speed, speed * (now - last.now));\n    const rotation = (last.rotation + rdelta) % PI2;\n    const tx = middle + radius * Math.cos(rotation);\n    const ty = middle + radius * Math.sin(rotation);\n    const bigArc = rdelta < Math.PI ? \"0\" : \"1\";\n    const path = `M${tx} ${ty}A${radius} ${radius} 0 ${bigArc} 0 ${last.tx} ${last.ty}L${middle} ${middle}`;\n    const hue = calcHue(rdelta / speed);\n    $arcs[framePtr % frames].setAttribute(\"d\", path);\n    $arcs[framePtr % frames].setAttribute(\"fill\", `hsl(${hue}, 80%, 40%)`);\n    $hand.setAttribute(\"d\", `M${middle} ${middle}L${tx} ${ty}`);\n    $hand.setAttribute(\"stroke\", `hsl(${hue}, 80%, 60%)`);\n\n    for (let i = 0; i < frames; i++) {\n      $arcs[(frames + framePtr - i) % frames].style.fillOpacity = 1 - i / frames;\n    }\n\n    framePtr++;\n    last = {\n      now,\n      rotation,\n      tx,\n      ty\n    };\n    frame = window.requestAnimationFrame(animate);\n  }\n\n  animate();\n  return function destroy() {\n    if (frame) {\n      window.cancelAnimationFrame(frame);\n    }\n\n    $root.remove();\n  };\n}","map":{"version":3,"sources":["/home/dilip/Desktop/MERN/himalaya/src/components/useLagRadar.js"],"names":["React","useWindowSize","useLagRadar","width","height","useEffect","lagRadar","frames","speed","size","Math","min","inset","parent","document","body","config","svgns","styles","createTextNode","$svg","tag","props","children","el","createElementNS","Object","keys","forEach","prop","setAttribute","child","appendChild","PI2","PI","middle","radius","$hand","class","$arcs","Array","fill","map","t","$root","type","cx","cy","r","frame","framePtr","last","rotation","now","Date","tx","ty","calcHue","max_hue","max_ms","log_f","mult","log","ms_delta","max","animate","rdelta","cos","sin","bigArc","path","hue","i","style","fillOpacity","window","requestAnimationFrame","destroy","cancelAnimationFrame","remove"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useWindowSize } from \"@react-hook/window-size\";\n\nexport default function useLagRadar() {\n  const [width, height] = useWindowSize();\n\n  React.useEffect(() => {\n    return lagRadar({\n      frames: 60, // number of frames to draw, more = worse performance\n      speed: 0.0017, // how fast the sweep moves (rads per ms)\n      size: Math.min(width, height) / 3, // outer frame px\n      inset: 3, // circle inset px\n      parent: document.body // DOM node to attach to\n    });\n  }, [width, height]);\n}\n\n/**\n * lagRadar\n * Licence: ISC copyright: @mobz 2018\n */\n\nfunction lagRadar(config = {}) {\n  const {\n    frames = 50, // number of frames to draw, more = worse performance\n    speed = 0.0017, // how fast the sweep moves (rads per ms)\n    size = 300, // outer frame px\n    inset = 3, // circle inset px\n    parent = document.body // DOM node to attach to\n  } = config;\n\n  const svgns = \"http://www.w3.org/2000/svg\";\n\n  const styles = document.createTextNode(`\n    .lagRadar-sweep > * {\n      shape-rendering: crispEdges;\n    }\n    .lagRadar-face {\n      fill: transparent;\n    }\n    .lagRadar-hand {\n      stroke-width: 4px;\n      stroke-linecap: round;\n    }\n  `);\n\n  function $svg(tag, props = {}, children = []) {\n    const el = document.createElementNS(svgns, tag);\n    Object.keys(props).forEach(prop => el.setAttribute(prop, props[prop]));\n    children.forEach(child => el.appendChild(child));\n    return el;\n  }\n\n  const PI2 = Math.PI * 2;\n  const middle = size / 2;\n  const radius = middle - inset;\n\n  const $hand = $svg(\"path\", { class: \"lagRadar-hand\" });\n  const $arcs = new Array(frames).fill(\"path\").map(t => $svg(t));\n  const $root = $svg(\"svg\", { class: \"lagRadar\", height: size, width: size }, [\n    $svg(\"style\", { type: \"text/css\" }, [styles]),\n    $svg(\"g\", { class: \"lagRadar-sweep\" }, $arcs),\n    $hand,\n    $svg(\"circle\", {\n      class: \"lagRadar-face\",\n      cx: middle,\n      cy: middle,\n      r: radius\n    })\n  ]);\n\n  parent.appendChild($root);\n\n  let frame;\n  let framePtr = 0;\n  let last = {\n    rotation: 0,\n    now: Date.now(),\n    tx: middle + radius,\n    ty: middle\n  };\n\n  const calcHue = (() => {\n    const max_hue = 120;\n    const max_ms = 1000;\n    const log_f = 10;\n    const mult = max_hue / Math.log(max_ms / log_f);\n    return function(ms_delta) {\n      return (\n        max_hue -\n        Math.max(0, Math.min(mult * Math.log(ms_delta / log_f), max_hue))\n      );\n    };\n  })();\n\n  function animate() {\n    const now = Date.now();\n    const rdelta = Math.min(PI2 - speed, speed * (now - last.now));\n    const rotation = (last.rotation + rdelta) % PI2;\n    const tx = middle + radius * Math.cos(rotation);\n    const ty = middle + radius * Math.sin(rotation);\n    const bigArc = rdelta < Math.PI ? \"0\" : \"1\";\n    const path = `M${tx} ${ty}A${radius} ${radius} 0 ${bigArc} 0 ${last.tx} ${last.ty}L${middle} ${middle}`;\n    const hue = calcHue(rdelta / speed);\n\n    $arcs[framePtr % frames].setAttribute(\"d\", path);\n    $arcs[framePtr % frames].setAttribute(\"fill\", `hsl(${hue}, 80%, 40%)`);\n    $hand.setAttribute(\"d\", `M${middle} ${middle}L${tx} ${ty}`);\n    $hand.setAttribute(\"stroke\", `hsl(${hue}, 80%, 60%)`);\n\n    for (let i = 0; i < frames; i++) {\n      $arcs[(frames + framePtr - i) % frames].style.fillOpacity =\n        1 - i / frames;\n    }\n\n    framePtr++;\n    last = {\n      now,\n      rotation,\n      tx,\n      ty\n    };\n\n    frame = window.requestAnimationFrame(animate);\n  }\n\n  animate();\n\n  return function destroy() {\n    if (frame) {\n      window.cancelAnimationFrame(frame);\n    }\n    $root.remove();\n  };\n}"]},"metadata":{},"sourceType":"module"}